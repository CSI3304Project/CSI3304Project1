#
# ==== Purpose ====
#
# WL#6559 Optimize GTIDs for passive slave - store GTIDs in table
#
# Added test cases to cover error branches.
#
# Test case 1: Simulate an error on writing gtids into table on
#              server shutdown, verify that we can get correct
#              gtid sets after server restarts.
# Test case 2: Simulate an error on writing gtids into table on
#              binlog rotation, verify that GTIDs are not saved
#              into gtid_executed table.
#

--source include/not_valgrind.inc
--source include/have_debug.inc
--source include/have_innodb.inc
--source include/have_log_bin.inc
--source include/have_gtid.inc

call mtr.add_suppression("Failed to save set of GTIDs of the last binlog into "
                         "gtid_executed table on server shutdown, so we save "
                         "it into gtid_executed table and executed_gtids "
                         "during next server startup.");
SET @debug_save= @@GLOBAL.DEBUG;
--let $master_uuid= `SELECT @@GLOBAL.SERVER_UUID`
CREATE TABLE t1 (a INT) ENGINE=InnoDB;

SET @@GLOBAL.DEBUG= "+d,simulate_err_on_write_gtid_into_table";
--source include/restart_mysqld.inc

--echo #
--echo # Verify that we can get correct gtid sets after server restarts
--echo # even if we encounter an error on writing gtids into table on
--echo # server shutdown.
--echo #
--let $assert_text= committed gtid set is MASTER_UUID:1-2
--let $assert_cond= @@GLOBAL.GTID_EXECUTED = "$master_uuid:1-2"
--source include/assert.inc
--replace_result $master_uuid MASTER_UUID
SELECT * FROM mysql.gtid_executed;
SET GLOBAL DEBUG= @debug_save;

call mtr.add_suppression(".* Turning logging off for the whole duration of the "
                         "MySQL server process. To turn it on again: fix the "
                         "cause, shutdown the MySQL server and restart it.");
INSERT INTO t1 VALUES(1);
SET SESSION debug="+d,simulate_err_on_write_gtid_into_table";
--ERROR ER_GET_ERRNO
FLUSH LOGS;
SET SESSION debug="-d,simulate_err_on_write_gtid_into_table";
--echo #
--echo # Verify that GTIDs are not saved into gtid_executed table if we
--echo # encounter an error on writing gtids into table on binlog rotation.
--echo #
--replace_result $master_uuid MASTER_UUID
SELECT * FROM mysql.gtid_executed;
--let $assert_text= committed gtid set is MASTER_UUID:1-4
--let $assert_cond= @@GLOBAL.GTID_EXECUTED = "$master_uuid:1-4"
--source include/assert.inc

DROP TABLE t1;

# Restart and reset the server
--source include/restart_mysqld.inc
RESET MASTER;

