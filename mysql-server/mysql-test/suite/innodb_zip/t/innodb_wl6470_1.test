--source include/have_innodb.inc
--source include/big_test.inc

####################################################################
# TC to test temp-table DML optimization changes for correctness   #
# Sceanrio covered:						   #
# 1. bulk-insert with rollback + commit: this will ensure btree    #
#    node split with rollback and commit.                          #
####################################################################

#-------------------------------------------------------------------
#
# 1. bulk-insert with rollback + commit: this will ensure btree    #
#    node split with rollback and commit.                          #
#
create temporary table t1
	(keyc int, c1 char(100), c2 char(100),
	 primary key(keyc), index sec_index(c1)
	) engine = innodb;
create temporary table t2
	(keyc int, c1 char(100), c2 char(100),
	 primary key(keyc), index sec_index(c1)
	) engine = innodb;
--source suite/innodb_zip/include/innodb_dml_ops.inc
drop table t1;
drop table t2;
#
let $format = `select @@innodb_file_format`;
set global innodb_file_format = 'Barracuda';
--disable_warnings
create temporary table t1
	(keyc int, c1 char(100), c2 char(100),
	 primary key(keyc), index sec_index(c1)
	) engine = innodb key_block_size = 4;
create temporary table t2
	(keyc int, c1 char(100), c2 char(100),
	 primary key(keyc), index sec_index(c1)
	) engine = innodb key_block_size = 8;
--enable_warnings
--source suite/innodb_zip/include/innodb_dml_ops.inc
drop table t1;
drop table t2;
eval set global innodb_file_format = $format;
#
let $file_per_table = `select @@innodb_file_per_table`;
set global innodb_file_per_table = 0;
create temporary table t1
	(keyc int, c1 char(100), c2 char(100),
	 primary key(keyc), index sec_index(c1)
	) engine = innodb;
create temporary table t2
	(keyc int, c1 char(100), c2 char(100),
	 primary key(keyc), index sec_index(c1)
	) engine = innodb;
--source suite/innodb_zip/include/innodb_dml_ops.inc
drop table t1;
drop table t2;
eval set global innodb_file_per_table = $file_per_table;
#

