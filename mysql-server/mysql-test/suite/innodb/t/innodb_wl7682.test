#
# WL#7682: Optimize InnoDB temporary tables.
#

--source include/have_innodb.inc
--source include/no_valgrind_without_big.inc
--source include/not_embedded.inc

################################################################################
#
# Workload will run following scenarios
# 1. Create/Drop sequence.
# 2. Basic DML operation on intrinsic table.
# 3. Run different types of queries on intrinsic table.
# 4. Multiple key DML
# 5. Large column (blob/text) column DML
#
# Test scenario that disables auto-extension of temporary tablespace.
#
################################################################################

#-----------------------------------------------------------------------------
#
# create test bed.
#

call mtr.add_suppression("InnoDB: Tablespace innodb_temporary_tablespace ran out of space. Please add another file or use \'autoextend\' for the last file in setting innodb_temp_data_file_path");
call mtr.add_suppression("The table \'t1\' is full");

#-----------------------------------------------------------------------------
#
# Workload in non-read-only mode.
#
set session innodb_create_intrinsic = 1;
--source suite/innodb/include/innodb_wl7682_workload.inc

#-----------------------------------------------------------------------------
#
# Workload in read-only mode.
#
let $restart_paramameters = restart: --innodb-read-only;
--source include/restart_mysqld.inc
#
#
set session innodb_create_intrinsic = 1;
--source suite/innodb/include/innodb_wl7682_workload.inc
#
#
--echo "Restarting Server with temp-tablespace auto-extension turned off"
let $restart_parameters = restart: --innodb_temp_data_file_path=ibtmp1:12M;
--source include/restart_mysqld.inc

# Test an undo log that spans multiple undo pages,
# both for temporary and non-temporary tables.
create table t0(a serial) engine=innodb;
create temporary table t0t(a serial) engine=innodb;
begin;
insert into t0 values (),(),(),(),(),(),(),(),(),(),(),(),(),(),(),();
insert into t0 select 0 from t0;
insert into t0 select 0 from t0;
insert into t0 select 0 from t0;
insert into t0 select 0 from t0;
insert into t0 select 0 from t0;
# Trigger insert_undo page overflow for a non-temporary table.
insert into t0 select 0 from t0;
# Trigger insert_undo page overflow for a temporary table.
insert into t0t select 0 from t0;
# Trigger update_undo page overflow for a non-temporary table.
update t0 set a=a+1048576;
delete from t0;
# Trigger update_undo page overflow for a temporary table.
update t0t set a=a+1048576;
delete from t0t;
rollback;
select * from t0;
select * from t0t;
drop table t0,t0t;

#-----------------------------------------------------------------------------
#
# Test scenario that disables auto-extension of temporary tablespace.
#
set session innodb_create_intrinsic = 1;
create temporary table t1
        (keyc int, c1 varchar(1024), c2 varchar(1024),
         primary key(keyc)) engine = innodb;
delimiter |;
CREATE PROCEDURE populate_t1()
BEGIN
        DECLARE i INT DEFAULT 1;
        while (i <= 2000) DO
                insert into t1 values (i, repeat('a', 1000), repeat('b', 1000));
                SET i = i + 1;
        END WHILE;
END|
delimiter ;|
#
--error ER_RECORD_FILE_FULL
call populate_t1();
#
let $regexp=/[0-9][0-9]+/NUMBER/;
--replace_regex $regexp
select count(*) from t1;
drop procedure populate_t1;
drop table t1;
#
#
let $restart_parameters = restart;
--source include/restart_mysqld.inc
