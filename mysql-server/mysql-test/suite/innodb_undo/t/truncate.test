#
# WL#6965: Truncate UNDO logs.
#

--source include/have_innodb.inc
# this is must to ensure that trx_purge_truncate is called with increased
# frequency so that undo logs are cleared.
--source include/have_debug.inc
# We are printing size of undo log below and if page size keeps on
# varying then initial size too keeps on varying.
--source include/have_innodb_16k.inc
--source include/have_undo_tablespaces.inc

# TC check if truncate is completed in given time frame. When
# test is run under valgrind there is no such time assurance.
--source include/not_valgrind.inc
--source include/big_test.inc


################################################################################
# Test-case will test following scenarios.
#
# 1. Perform enough DML action so that undo tablespace size grows beyond
#    set threshold and then wait and see if it is being truncated.
#
################################################################################

#-----------------------------------------------------------------------------
#
# create test-bed
#
let MYSQL_DATA_DIR_ENV = `select @@datadir`;
let $MYSQL_DATA_DIR = `select @@datadir`;

#-----------------------------------------------------------------------------
#
# 1. Perform enough DML action so that undo tablespace size grows beyond
#    set threshold and then wait and see if it is being truncated.
#
--echo "List the size of undo tablespace"
perl;
	my $datadir = $ENV{'MYSQL_DATA_DIR_ENV'};
	my $filesize = -s "$datadir/undo001";
	open (OUTPUT, ">$datadir/wl6965.output");
	print OUTPUT "let \$size= $filesize;\n";
	close (OUTPUT);
EOF
--source $MYSQL_DATA_DIR/wl6965.output
--echo $size;
#
use test;
create table t1
        (keyc int, c1 char(100), c2 char(100),
         primary key(keyc)) engine = innodb;
delimiter |;
CREATE PROCEDURE populate_t1()
BEGIN
        DECLARE i INT DEFAULT 1;
        while (i <= 40000) DO
                insert into t1 values (i, 'a', 'b');
                SET i = i + 1;
        END WHILE;
END |
delimiter ;|
begin;
call populate_t1();
delete from t1 where keyc < 20000;
update t1 set c1 = 'mysql' where  keyc > 20000;
update t1 set c2 = 'oracle' where  keyc > 20000;
#
--echo "List the size of undo tablespace"
perl;
	my $datadir = $ENV{'MYSQL_DATA_DIR_ENV'};
	my $filesize = -s "$datadir/undo001";
	open (OUTPUT, ">$datadir/wl6965.output");
	print OUTPUT "let \$size= $filesize;\n";
	close (OUTPUT);
EOF
--source $MYSQL_DATA_DIR/wl6965.output
--echo $size;
#
commit;
drop table t1;
drop PROCEDURE populate_t1;
--sleep 40

#-----------------------------------------------------------------------------
#
# remove test-bed
#

