# *********************************************************
# Test Multiple Spatial Indexes on compression table
# Test spatial index with table having primary key column
# Test Spatial index with Create Index different clauses
# Test Spatial index with spatial relationship functions
# Test Spatial index with MBR spatial relationship functions
# Test Spatial index columns with DML & SELECT queries
# Test Spatial index with procedures
# Test Delete & Update & check status of the table
# Test spatial index with table have no primary key column
# Test spatial index with table have no auto_increment
# Test spatial index with check constraint
# **********************************************************
--source include/have_innodb.inc
--source include/have_innodb_16k.inc
--source include/have_geometry.inc


SET GLOBAL innodb_file_format='barracuda';
# Recommends this with compress tables
SET innodb_strict_mode=ON;

# Check spatial index functionality on compress table with Primary key
CREATE TABLE tab(c1 int NOT NULL PRIMARY KEY,c2 POINT NOT NULL,
c3 LINESTRING NOT NULL,c4 POLYGON NOT NULL,c5 GEOMETRY NOT NULL) 
ENGINE=InnoDB ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=8;

# Check spatial index functionality with Create Index clause options
CREATE SPATIAL INDEX idx1 on tab(c2 ASC);
CREATE SPATIAL INDEX idx2 on tab(c3 DESC) COMMENT 'wl6968';
CREATE SPATIAL INDEX idx3 on tab(c4 ASC) KEY_BLOCK_SIZE=8 ;
CREATE SPATIAL INDEX idx4 on tab(c5 DESC) KEY_BLOCK_SIZE=4 
COMMENT 'Spatial index on Geometry type column';

# Check index type
SHOW INDEXES FROM tab;

# Populate some spatial data
INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(1,GeomFromText('POINT(10 10)'),GeomFromText('LINESTRING(5 5,20 20,30 30)'),
GeomFromText('POLYGON((30 30,40 40,50 50,30 50,30 40,30 30))'),
GeomFromText('POLYGON((30 30,40 40,50 50,30 50,30 40,30 30))'));


INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(2,GeomFromText('POINT(20 20)'),GeomFromText('LINESTRING(20 20,30 30,40 40)'),
GeomFromText('POLYGON((40 50,40 70,50 100,70 100,80 80,70 50,40 50))'),
GeomFromText('POLYGON((40 50,40 70,50 100,70 100,80 80,70 50,40 50))'));


INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(3,GeomFromText('POINT(4 4)'),GeomFromText('LINESTRING(130 130,140 140,150 150)'),
GeomFromText('POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))'),
GeomFromText('POLYGON((4 -2,5 -4,6 -5,7 -4,7 2,4 -2))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(4,GeomFromText('POINT(50 50)'),GeomFromText('LINESTRING(200 200,300 300,400 400)'),
GeomFromText('POLYGON((300 300,400 400,500 500,300 500,300 400,300 300))'),
GeomFromText('POLYGON((300 300,400 400,500 500,300 500,300 400,300 300))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(5,GeomFromText('POINT(3 3)'),GeomFromText('LINESTRING(400 400,500 500,600 700)'),
GeomFromText('POLYGON((1010 1010,1020 1020,1030 1030,1040 1030,1020 1010,1010 1010))'),
GeomFromText('POLYGON((1010 1010,1020 1020,1030 1030,1040 1030,1020 1010,1010 1010))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(6,GeomFromText('POINT(3 3)'),GeomFromText('LINESTRING(40 40,50 50,60 70)'),
GeomFromText('POLYGON((2010 2010,2020 2020,2030 2030,2040 2030,2020 2010,2010 2010))'),
GeomFromText('POLYGON((2010 2010,2020 2020,2030 2030,2040 2030,2020 2010,2010 2010))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(7,GeomFromText('POINT(60 70)'),GeomFromText('LINESTRING(40 40,50 50,60 70)'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(8,GeomFromText('POINT(0 0)'),GeomFromText('LINESTRING(40 40,50 50,60 70)'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'));


INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(9,GeomFromText('POINT(120 120)'),GeomFromText('LINESTRING(100 100,110 110,120 120)'),
GeomFromText('POLYGON((4010 4010,4020 4020,4030 4030,4040 4030,4020 4010,4010 4010))'),
GeomFromText('POLYGON((4010 4010,4020 4020,4030 4030,4040 4030,4020 4010,4010 4010))'));


INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(10,GeomFromText('POINT(160 160)'),GeomFromText('LINESTRING(140 140,150 150,160 160)'),
GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))'),
GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))'));

# Check the spatial relationship between 2 GIS shapes

# Test the Contains
SET @g1 = GeomFromText( 'POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Contains(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Contains(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 300 300,400 400)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Contains(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Contains(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Contains(tab.c4, @g1);

# Test the Within
SET @g1 = GeomFromText( 'POLYGON((30 30,40 40,50 50,30 50,30 40,30 30)) ');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Within(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Within(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Within(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Within(tab.c4, @g1);

# Test the Crosses
SET @g1 = GeomFromText('POLYGON((100 200,200 300,400 500,500 300,300 200,100 300,100 200))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Crosses(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Crosses(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 10 10,30 30,40 40)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE CRosses(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Crosses(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Crosses(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Crosses(tab.c4, @g1);

# Test the Disjoint
SET @g1 = GeomFromText('POLYGON((4 -2,5 -4,6 -5,7 -4,7 2,4 -2))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Disjoint(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Disjoint(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Disjoint(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Disjoint(tab.c4, @g1);

# Test the Equals
SET @g1 = GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Equals(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Equals(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Equals(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Equals(tab.c4, @g1);

# Test the intersects
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE intersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE intersects(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 30 30,40 40,50 50)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Intersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE intersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE intersects(tab.c4, @g1);

# Test the Overelaps
SET @g1 = GeomFromText( 'POLYGON((0 0,0 2,4 5,5 5,7 1,0 0 ))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Overlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Overlaps(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Overlaps(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Overlaps(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING(7 1,30 30,1010 3010,1010 2010,3010 3010,4010 4010,5010 5010 )');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Overlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Overlaps(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Overlaps(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Overlaps(tab.c4, @g1);

# Test the Touches
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Touches(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Touches(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Touches(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Touches(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 100 100,200 200,300 300)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Touches(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Touches(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Touches(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Touches(tab.c4, @g1);

# Test the MBRContains
SET @g1 = GeomFromText( 'POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRContains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRContains(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRContains(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRContains(tab.c4, @g1);

SET @g1 = GeomFromText( 'POLYGON((30 30,40 40,50 50,30 50,30 40,30 30)) ');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRWithin(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRWithin(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRWithin(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRWithin(tab.c4, @g1);

# Test the MBRDisjoint
SET @g1 = GeomFromText('POLYGON((4 -2,5 -4,6 -5,7 -4,7 2,4 -2))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRDisjoint(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRDisjoint(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRDisjoint(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRDisjoint(tab.c4, @g1);

# Test the MBREqual
SET @g1 = GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBREqual(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBREqual(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBREqual(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBREqual(tab.c4, @g1);

# Test the MBRintersects
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRIntersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRIntersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRintersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRintersects(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 30 30,40 40,50 50)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRIntersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  MBRIntersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRintersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRintersects(tab.c4, @g1);

# Test the MBROverelaps
SET @g1 = GeomFromText( 'POLYGON((0 0,0 2,4 5,5 5,7 1,0 0 ))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBROverlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBROverlaps(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBROverlaps(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBROverlaps(tab.c4, @g1);

# Test the MBRTouches
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRTouches(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRTouches(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRTouches(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRTouches(tab.c4, @g1);

# Test with Procedure
delimiter |;

CREATE PROCEDURE proc_wl6968()
BEGIN

SET @g1 = GeomFromText( 'POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))');
EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);
EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Contains(tab.c4, @g1);
EXPLAIN DELETE FROM tab WHERE Contains(tab.c4, @g1);

END |

delimiter ;|

CALL proc_wl6968();

# Test the Delete & Update
SET @g1 = GeomFromText( 'POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))');

SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

DELETE FROM tab WHERE Contains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

CHECK TABLE tab;

SET @g1 = GeomFromText('LINESTRING( 300 300,400 400)');

SELECT c1,Astext(c4) FROM tab WHERE  Contains(tab.c4, @g1);

DELETE FROM tab WHERE Contains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Contains(tab.c4, @g1);

CHECK TABLE tab;

SET @g1 = GeomFromText('POLYGON((100 200,1010 1010,1020 1020,500 300,300 200,100 300,100 200))');

SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

DELETE FROM tab WHERE Crosses(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

CHECK TABLE tab;

SET @g1 = GeomFromText('POLYGON((30 30,40 40,50 50,30 50,30 40,30 30))');

SET @g2 = GeomFromText( 'POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))');

UPDATE tab SET C4 = @g2  WHERE Crosses(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Crosses(tab.c4, @g2);

CHECK TABLE tab;

# Cleanup 
DROP TABLE tab; 
DROP PROCEDURE proc_wl6968;

# End of Testcase compress table with Primary key

# Check spatial index functionality on compress table No Primary key
CREATE TABLE tab(c1 int ,c2 POINT NOT NULL,
c3 LINESTRING NOT NULL,c4 POLYGON NOT NULL,c5 GEOMETRY NOT NULL) 
ENGINE=InnoDB ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=16;

# Check spatial index functionality with Create Index clause options
CREATE SPATIAL INDEX idx1 on tab(c2 ASC);
CREATE SPATIAL INDEX idx2 on tab(c3 DESC) COMMENT 'wl6968';
CREATE SPATIAL INDEX idx3 on tab(c4 ASC) KEY_BLOCK_SIZE=2 ;
CREATE SPATIAL INDEX idx4 on tab(c5 DESC) KEY_BLOCK_SIZE=8 
COMMENT 'Spatial index on Geometry type column';

# Check index type
SHOW INDEXES FROM tab;

# Populate some spatial data
INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(1,GeomFromText('POINT(10 10)'),GeomFromText('LINESTRING(5 5,20 20,30 30)'),
GeomFromText('POLYGON((30 30,40 40,50 50,30 50,30 40,30 30))'),
GeomFromText('POLYGON((30 30,40 40,50 50,30 50,30 40,30 30))'));


INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(2,GeomFromText('POINT(20 20)'),GeomFromText('LINESTRING(20 20,30 30,40 40)'),
GeomFromText('POLYGON((40 50,40 70,50 100,70 100,80 80,70 50,40 50))'),
GeomFromText('POLYGON((40 50,40 70,50 100,70 100,80 80,70 50,40 50))'));


INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(3,GeomFromText('POINT(4 4)'),GeomFromText('LINESTRING(130 130,140 140,150 150)'),
GeomFromText('POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))'),
GeomFromText('POLYGON((4 -2,5 -4,6 -5,7 -4,7 2,4 -2))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(4,GeomFromText('POINT(50 50)'),GeomFromText('LINESTRING(200 200,300 300,400 400)'),
GeomFromText('POLYGON((300 300,400 400,500 500,300 500,300 400,300 300))'),
GeomFromText('POLYGON((300 300,400 400,500 500,300 500,300 400,300 300))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(5,GeomFromText('POINT(3 3)'),GeomFromText('LINESTRING(400 400,500 500,600 700)'),
GeomFromText('POLYGON((1010 1010,1020 1020,1030 1030,1040 1030,1020 1010,1010 1010))'),
GeomFromText('POLYGON((1010 1010,1020 1020,1030 1030,1040 1030,1020 1010,1010 1010))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(6,GeomFromText('POINT(3 3)'),GeomFromText('LINESTRING(40 40,50 50,60 70)'),
GeomFromText('POLYGON((2010 2010,2020 2020,2030 2030,2040 2030,2020 2010,2010 2010))'),
GeomFromText('POLYGON((2010 2010,2020 2020,2030 2030,2040 2030,2020 2010,2010 2010))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(7,GeomFromText('POINT(60 70)'),GeomFromText('LINESTRING(40 40,50 50,60 70)'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'));

INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(8,GeomFromText('POINT(0 0)'),GeomFromText('LINESTRING(40 40,50 50,60 70)'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'));


INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(9,GeomFromText('POINT(120 120)'),GeomFromText('LINESTRING(100 100,110 110,120 120)'),
GeomFromText('POLYGON((4010 4010,4020 4020,4030 4030,4040 4030,4020 4010,4010 4010))'),
GeomFromText('POLYGON((4010 4010,4020 4020,4030 4030,4040 4030,4020 4010,4010 4010))'));


INSERT INTO tab(c1,c2,c3,c4,c5) 
VALUES(10,GeomFromText('POINT(160 160)'),GeomFromText('LINESTRING(140 140,150 150,160 160)'),
GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))'),
GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))'));

# Check the spatial relationship between 2 GIS shapes

# Test the Contains
SET @g1 = GeomFromText( 'POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Contains(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Contains(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 300 300,400 400)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Contains(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Contains(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Contains(tab.c4, @g1);

# Test the Within
SET @g1 = GeomFromText( 'POLYGON((30 30,40 40,50 50,30 50,30 40,30 30)) ');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Within(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Within(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Within(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Within(tab.c4, @g1);

# Test the Crosses
SET @g1 = GeomFromText('POLYGON((100 200,200 300,400 500,500 300,300 200,100 300,100 200))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Crosses(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Crosses(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 10 10,30 30,40 40)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE CRosses(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Crosses(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Crosses(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Crosses(tab.c4, @g1);

# Test the Disjoint
SET @g1 = GeomFromText('POLYGON((4 -2,5 -4,6 -5,7 -4,7 2,4 -2))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Disjoint(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Disjoint(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Disjoint(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Disjoint(tab.c4, @g1);

# Test the Equals
SET @g1 = GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Equals(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Equals(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Equals(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Equals(tab.c4, @g1);

# Test the intersects
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE intersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE intersects(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 30 30,40 40,50 50)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Intersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE intersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE intersects(tab.c4, @g1);

# Test the Overelaps
SET @g1 = GeomFromText( 'POLYGON((0 0,0 2,4 5,5 5,7 1,0 0 ))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Overlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Overlaps(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Overlaps(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Overlaps(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING(7 1,30 30,1010 3010,1010 2010,3010 3010,4010 4010,5010 5010 )');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Overlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Overlaps(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Overlaps(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Overlaps(tab.c4, @g1);

# Test the Touches
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Touches(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Touches(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Touches(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Touches(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 100 100,200 200,300 300)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Touches(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Touches(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Touches(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Touches(tab.c4, @g1);

# Test the MBRContains
SET @g1 = GeomFromText( 'POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRContains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRContains(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRContains(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRContains(tab.c4, @g1);

SET @g1 = GeomFromText( 'POLYGON((30 30,40 40,50 50,30 50,30 40,30 30)) ');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRWithin(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRWithin(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRWithin(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRWithin(tab.c4, @g1);

# Test the MBRDisjoint
SET @g1 = GeomFromText('POLYGON((4 -2,5 -4,6 -5,7 -4,7 2,4 -2))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRDisjoint(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRDisjoint(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRDisjoint(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRDisjoint(tab.c4, @g1);

# Test the MBREqual
SET @g1 = GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBREqual(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBREqual(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBREqual(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBREqual(tab.c4, @g1);

# Test the MBRintersects
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRIntersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRIntersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRintersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRintersects(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 30 30,40 40,50 50)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRIntersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  MBRIntersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRintersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRintersects(tab.c4, @g1);

# Test the MBROverelaps
SET @g1 = GeomFromText( 'POLYGON((0 0,0 2,4 5,5 5,7 1,0 0 ))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBROverlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBROverlaps(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBROverlaps(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBROverlaps(tab.c4, @g1);

# Test the MBRTouches
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRTouches(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRTouches(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRTouches(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRTouches(tab.c4, @g1);

# Test with Procedure
delimiter |;

CREATE PROCEDURE proc_wl6968()
BEGIN

SET @g1 = GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))');
EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBREqual(tab.c4, @g1);
EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBREqual(tab.c4, @g1);
EXPLAIN DELETE FROM tab WHERE MBREqual(tab.c4, @g1);

END |

delimiter ;|

CALL proc_wl6968();

# Test the Delete & Update
SET @g1 = GeomFromText( 'POLYGON((30 30,40 40,50 50,30 50,30 40,30 30)) ');

SELECT c1,Astext(c4) FROM tab WHERE Within(tab.c4, @g1);

DELETE FROM tab WHERE Within(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Within(tab.c4, @g1);

CHECK TABLE tab;

SET @g1 = GeomFromText('POLYGON((100 200,200 300,400 500,500 300,300 200,100 300,100 200))');

SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

DELETE FROM tab WHERE Crosses(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

SET @g1 = GeomFromText( 'POLYGON((0 0,0 2,4 5,5 5,7 1,0 0 ))');

SET @g2 = GeomFromText( 'POLYGON((1 1,2 2,3 3,10 3,5 1,1 1))');

UPDATE tab SET C4 = @g2  WHERE Overlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Overlaps(tab.c4, @g1);

CHECK TABLE tab;

# Cleanup 
DROP TABLE tab; 
DROP PROCEDURE proc_wl6968;

# End of Testcase compress table No Primary key

# Check spatial index functionality on compress table with auto_increment
CREATE TABLE tab(c1 int AUTO_INCREMENT PRIMARY KEY,c2 POINT NOT NULL,
c3 LINESTRING NOT NULL,c4 POLYGON NOT NULL,c5 GEOMETRY NOT NULL) 
ENGINE=InnoDB ROW_FORMAT=COMPRESSED KEY_BLOCK_SIZE=16;

# Check spatial index functionality with Create Index clause options
CREATE SPATIAL INDEX idx1 on tab(c2 ASC);
CREATE SPATIAL INDEX idx2 on tab(c3 DESC) COMMENT 'wl6968';
CREATE SPATIAL INDEX idx3 on tab(c4 ASC) KEY_BLOCK_SIZE=16 ;
CREATE SPATIAL INDEX idx4 on tab(c5 DESC) KEY_BLOCK_SIZE=16 
COMMENT 'Spatial index on Geometry type column';

# Check index type
SHOW INDEXES FROM tab;

# Populate some spatial data
INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(10 10)'),GeomFromText('LINESTRING(5 5,20 20,30 30)'),
GeomFromText('POLYGON((30 30,40 40,50 50,30 50,30 40,30 30))'),
GeomFromText('POLYGON((30 30,40 40,50 50,30 50,30 40,30 30))'));


INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(20 20)'),GeomFromText('LINESTRING(20 20,30 30,40 40)'),
GeomFromText('POLYGON((40 50,40 70,50 100,70 100,80 80,70 50,40 50))'),
GeomFromText('POLYGON((40 50,40 70,50 100,70 100,80 80,70 50,40 50))'));


INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(4 4)'),GeomFromText('LINESTRING(130 130,140 140,150 150)'),
GeomFromText('POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))'),
GeomFromText('POLYGON((4 -2,5 -4,6 -5,7 -4,7 2,4 -2))'));

INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(50 50)'),GeomFromText('LINESTRING(200 200,300 300,400 400)'),
GeomFromText('POLYGON((300 300,400 400,500 500,300 500,300 400,300 300))'),
GeomFromText('POLYGON((300 300,400 400,500 500,300 500,300 400,300 300))'));

INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(3 3)'),GeomFromText('LINESTRING(400 400,500 500,600 700)'),
GeomFromText('POLYGON((1010 1010,1020 1020,1030 1030,1040 1030,1020 1010,1010 1010))'),
GeomFromText('POLYGON((1010 1010,1020 1020,1030 1030,1040 1030,1020 1010,1010 1010))'));

INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(3 3)'),GeomFromText('LINESTRING(40 40,50 50,60 70)'),
GeomFromText('POLYGON((2010 2010,2020 2020,2030 2030,2040 2030,2020 2010,2010 2010))'),
GeomFromText('POLYGON((2010 2010,2020 2020,2030 2030,2040 2030,2020 2010,2010 2010))'));

INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(60 70)'),GeomFromText('LINESTRING(40 40,50 50,60 70)'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'));

INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(0 0)'),GeomFromText('LINESTRING(40 40,50 50,60 70)'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'),
GeomFromText('POLYGON((3010 3010,3020 3020,3030 3030,3040 3030,3020 3010,3010 3010))'));


INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(120 120)'),GeomFromText('LINESTRING(100 100,110 110,120 120)'),
GeomFromText('POLYGON((4010 4010,4020 4020,4030 4030,4040 4030,4020 4010,4010 4010))'),
GeomFromText('POLYGON((4010 4010,4020 4020,4030 4030,4040 4030,4020 4010,4010 4010))'));


INSERT INTO tab(c2,c3,c4,c5) 
VALUES(GeomFromText('POINT(160 160)'),GeomFromText('LINESTRING(140 140,150 150,160 160)'),
GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))'),
GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))'));

# Check the spatial relationship between 2 GIS shapes

# Test the Contains
SET @g1 = GeomFromText( 'POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Contains(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Contains(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 300 300,400 400)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Contains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Contains(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Contains(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Contains(tab.c4, @g1);

# Test the Within
SET @g1 = GeomFromText( 'POLYGON((30 30,40 40,50 50,30 50,30 40,30 30)) ');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Within(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Within(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Within(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Within(tab.c4, @g1);

# Test the Crosses
SET @g1 = GeomFromText('POLYGON((100 200,200 300,400 500,500 300,300 200,100 300,100 200))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Crosses(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Crosses(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Crosses(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 10 10,30 30,40 40)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE CRosses(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Crosses(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Crosses(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Crosses(tab.c4, @g1);

# Test the Disjoint
SET @g1 = GeomFromText('POLYGON((4 -2,5 -4,6 -5,7 -4,7 2,4 -2))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Disjoint(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Disjoint(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Disjoint(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Disjoint(tab.c4, @g1);

# Test the Equals
SET @g1 = GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Equals(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Equals(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Equals(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Equals(tab.c4, @g1);

# Test the intersects
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE intersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE intersects(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 30 30,40 40,50 50)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Intersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE intersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE intersects(tab.c4, @g1);

# Test the Overelaps
SET @g1 = GeomFromText( 'POLYGON((0 0,0 2,4 5,5 5,7 1,0 0 ))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Overlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Overlaps(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Overlaps(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Overlaps(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING(7 1,30 30,1010 3010,1010 2010,3010 3010,4010 4010,5010 5010 )');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Overlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Overlaps(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Overlaps(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Overlaps(tab.c4, @g1);

# Test the Touches
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Touches(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Touches(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Touches(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Touches(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 100 100,200 200,300 300)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE Touches(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  Touches(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE Touches(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE Touches(tab.c4, @g1);

# Test the MBRContains
SET @g1 = GeomFromText( 'POLYGON((7 1,6 2,6 3,10 3,10 1,7 1))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRContains(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRContains(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRContains(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRContains(tab.c4, @g1);

SET @g1 = GeomFromText( 'POLYGON((30 30,40 40,50 50,30 50,30 40,30 30)) ');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRWithin(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRWithin(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRWithin(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRWithin(tab.c4, @g1);

# Test the MBRDisjoint
SET @g1 = GeomFromText('POLYGON((4 -2,5 -4,6 -5,7 -4,7 2,4 -2))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRDisjoint(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRDisjoint(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRDisjoint(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRDisjoint(tab.c4, @g1);

# Test the MBREqual
SET @g1 = GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBREqual(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBREqual(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBREqual(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBREqual(tab.c4, @g1);

# Test the MBRintersects
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRIntersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRIntersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRintersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRintersects(tab.c4, @g1);

SET @g1 = GeomFromText('LINESTRING( 30 30,40 40,50 50)');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRIntersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE  MBRIntersects(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRintersects(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRintersects(tab.c4, @g1);

# Test the MBROverelaps
SET @g1 = GeomFromText( 'POLYGON((0 0,0 2,4 5,5 5,7 1,0 0 ))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBROverlaps(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBROverlaps(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBROverlaps(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBROverlaps(tab.c4, @g1);

# Test the MBRTouches
SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

EXPLAIN SELECT c1,Astext(c4) FROM tab WHERE MBRTouches(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE MBRTouches(tab.c4, @g1);

EXPLAIN UPDATE tab SET C2 = GeomFromText('POINT(0 0)') 
WHERE MBRTouches(tab.c4, @g1);

EXPLAIN DELETE FROM tab WHERE MBRTouches(tab.c4, @g1);

# Test the Delete & Update
SET @g1 = GeomFromText('POLYGON((5010 5010,5020 5020,5030 5030,5040 5030,5020 5010,5010 5010))');

SELECT c1,Astext(c4) FROM tab WHERE Equals(tab.c4, @g1);

DELETE FROM tab WHERE Equals(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Equals(tab.c4, @g1);

CHECK TABLE tab;

SET @g1 = GeomFromText( 'POLYGON((0 0,0 30,30 40,40 50,50 30,0 0))');

SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

DELETE FROM tab WHERE Intersects(tab.c4, @g1);

SELECT c1,Astext(c4) FROM tab WHERE Intersects(tab.c4, @g1);

CHECK TABLE tab;

# Cleanup 
DROP TABLE tab; 

# End of Testcase compress table with Auto_increment 

# Test check constraint on spatial column
CREATE TABLE tab(c1 POINT NOT NULL,CONSTRAINT tab_const check(c1 > 0) ) ENGINE=InnoDB;

CREATE SPATIAL INDEX idx1 ON tab(c1) ;

SHOW CREATE TABLE tab;

SHOW INDEX FROM tab;

set @g1 = GeomFromText('POINT(-1 -2))');

SELECT AsText(c1) FROM tab;

DROP table tab;

# Reset the values
SET GLOBAL innodb_file_format=Default;
SET innodb_strict_mode=Default;
