create table t1 (i int, i2 char(10), g geometry not null, primary key (i, i2), spatial index (g))engine=innodb;
insert into t1 values (1, "111", POINT(1,1));
insert into t1 values (2, "222", POINT(1.5,1.5));
insert into t1 values (3, "333", POINT(3,3));
insert into t1 values (4, "444", POINT(3.1,3.1));
insert into t1 values (5, "555", POINT(5,5));
set @g1 = GeomFromText('Polygon((0 0,0 3,3 3,3 0,0 0))');
explain select astext(t1.g) from t1 where Within(t1.g, @g1);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	g	g	34	NULL	2	100.00	Using where
Warnings:
Note	1003	/* select#1 */ select st_astext(`test`.`t1`.`g`) AS `astext(t1.g)` from `test`.`t1` where mbrwithin(`test`.`t1`.`g`,(@`g1`))
select astext(t1.g) from t1 where Within(t1.g, @g1);
astext(t1.g)
POINT(3 3)
POINT(1.5 1.5)
POINT(1 1)
set @g1 = GeomFromText('Polygon((0 0,0 3,3 3,3 0,0 0))');
delete from t1 where Within(t1.g, @g1);
check table t1;
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
select astext(t1.g) from t1;
astext(t1.g)
POINT(3.1 3.1)
POINT(5 5)
set @g1 = GeomFromText('Polygon((5 5,5 5,5 5,5 5,5 5))');
update t1 set g = POINT(2,2) where Within(t1.g, @g1);
check table t1;
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
select astext(t1.g) from t1;
astext(t1.g)
POINT(3.1 3.1)
POINT(2 2)
show indexes from t1;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_comment
t1	0	PRIMARY	1	i	A	#	NULL	NULL		BTREE		
t1	0	PRIMARY	2	i2	A	#	NULL	NULL		BTREE		
t1	1	g	1	g	A	#	32	NULL		SPATIAL		
drop table t1;
create table t1 (name VARCHAR(100), square GEOMETRY not null, spatial index (square))engine=innodb;
INSERT INTO t1 VALUES("small",  GeomFromText('POLYGON (( 0 0, 0 1, 1 1, 1 0, 0 0))'));
INSERT INTO t1 VALUES("big",    GeomFromText('POLYGON (( 0 0, 0 3, 3 3, 3 0, 0 0))'));
INSERT INTO t1 VALUES("up",     GeomFromText('POLYGON (( 0 1, 0 3, 2 3, 2 1, 0 1))'));
INSERT INTO t1 VALUES("up2",    GeomFromText('POLYGON (( 0 2, 0 4, 2 4, 2 2, 0 2))'));
INSERT INTO t1 VALUES("up3",    GeomFromText('POLYGON (( 0 3, 0 5, 2 5, 2 3, 0 3))'));
INSERT INTO t1 VALUES("down",   GeomFromText('POLYGON (( 0 -1, 0  1, 2  1, 2 -1, 0 -1))'));
INSERT INTO t1 VALUES("down2",  GeomFromText('POLYGON (( 0 -2, 0  0, 2  0, 2 -2, 0 -2))'));
INSERT INTO t1 VALUES("down3",  GeomFromText('POLYGON (( 0 -3, 0 -1, 2 -1, 2 -3, 0 -3))'));
INSERT INTO t1 VALUES("right",  GeomFromText('POLYGON (( 1 0, 1 2, 3 2, 3 0, 1 0))'));
INSERT INTO t1 VALUES("right2", GeomFromText('POLYGON (( 2 0, 2 2, 4 2, 4 0, 2 0))'));
INSERT INTO t1 VALUES("right3", GeomFromText('POLYGON (( 3 0, 3 2, 5 2, 5 0, 3 0))'));
INSERT INTO t1 VALUES("left",   GeomFromText('POLYGON (( -1 0, -1 2,  1 2,  1 0, -1 0))'));
INSERT INTO t1 VALUES("left2",  GeomFromText('POLYGON (( -2 0, -2 2,  0 2,  0 0, -2 0))'));
INSERT INTO t1 VALUES("left3",  GeomFromText('POLYGON (( -3 0, -3 2, -1 2, -1 0, -3 0))'));
SET @p = GeomFromText('POLYGON (( 0 0, 0 2, 2 2, 2 0, 0 0))');
SELECT name, AsText(square) from t1 where MBRContains(@p, square);
name	AsText(square)
small	POLYGON((0 0,0 1,1 1,1 0,0 0))
SELECT name, AsText(square) from t1 where MBRDisjoint(@p, square);
name	AsText(square)
right3	POLYGON((3 0,3 2,5 2,5 0,3 0))
up3	POLYGON((0 3,0 5,2 5,2 3,0 3))
down3	POLYGON((0 -3,0 -1,2 -1,2 -3,0 -3))
left3	POLYGON((-3 0,-3 2,-1 2,-1 0,-3 0))
SELECT name, AsText(square) from t1 where MBREqual(@p, square);
name	AsText(square)
SELECT name, AsText(square) from t1 where MBRIntersects(@p, square);
name	AsText(square)
right2	POLYGON((2 0,2 2,4 2,4 0,2 0))
right	POLYGON((1 0,1 2,3 2,3 0,1 0))
up2	POLYGON((0 2,0 4,2 4,2 2,0 2))
up	POLYGON((0 1,0 3,2 3,2 1,0 1))
big	POLYGON((0 0,0 3,3 3,3 0,0 0))
small	POLYGON((0 0,0 1,1 1,1 0,0 0))
down	POLYGON((0 -1,0 1,2 1,2 -1,0 -1))
down2	POLYGON((0 -2,0 0,2 0,2 -2,0 -2))
left	POLYGON((-1 0,-1 2,1 2,1 0,-1 0))
left2	POLYGON((-2 0,-2 2,0 2,0 0,-2 0))
SELECT name, AsText(square) from t1 where MBROverlaps(@p, square);
name	AsText(square)
right	POLYGON((1 0,1 2,3 2,3 0,1 0))
up	POLYGON((0 1,0 3,2 3,2 1,0 1))
down	POLYGON((0 -1,0 1,2 1,2 -1,0 -1))
left	POLYGON((-1 0,-1 2,1 2,1 0,-1 0))
SELECT name, AsText(square) from t1 where MBRTouches(@p, square);
name	AsText(square)
right2	POLYGON((2 0,4 0,4 2,2 2,2 0))
up2	POLYGON((0 2,2 2,2 4,0 4,0 2))
down2	POLYGON((0 -2,2 -2,2 0,0 0,0 -2))
left2	POLYGON((-2 0,0 0,0 2,-2 2,-2 0))
SELECT name, AsText(square) from t1 where MBRWithin(@p, square);
name	AsText(square)
big	POLYGON((0 0,0 3,3 3,3 0,0 0))
SELECT name, AsText(square) from t1 where Contains(@p, square);
name	AsText(square)
small	POLYGON((0 0,0 1,1 1,1 0,0 0))
SELECT name, AsText(square) from t1 where Disjoint(@p, square);
name	AsText(square)
right3	POLYGON((3 0,3 2,5 2,5 0,3 0))
up3	POLYGON((0 3,0 5,2 5,2 3,0 3))
down3	POLYGON((0 -3,0 -1,2 -1,2 -3,0 -3))
left3	POLYGON((-3 0,-3 2,-1 2,-1 0,-3 0))
SELECT name, AsText(square) from t1 where Equals(@p, square);
name	AsText(square)
SELECT name, AsText(square) from t1 where Intersects(@p, square);
name	AsText(square)
right2	POLYGON((2 0,2 2,4 2,4 0,2 0))
right	POLYGON((1 0,1 2,3 2,3 0,1 0))
up2	POLYGON((0 2,0 4,2 4,2 2,0 2))
up	POLYGON((0 1,0 3,2 3,2 1,0 1))
big	POLYGON((0 0,0 3,3 3,3 0,0 0))
small	POLYGON((0 0,0 1,1 1,1 0,0 0))
down	POLYGON((0 -1,0 1,2 1,2 -1,0 -1))
down2	POLYGON((0 -2,0 0,2 0,2 -2,0 -2))
left	POLYGON((-1 0,-1 2,1 2,1 0,-1 0))
left2	POLYGON((-2 0,-2 2,0 2,0 0,-2 0))
SELECT name, AsText(square) from t1 where Overlaps(@p, square);
name	AsText(square)
right	POLYGON((1 0,1 2,3 2,3 0,1 0))
up	POLYGON((0 1,0 3,2 3,2 1,0 1))
down	POLYGON((0 -1,0 1,2 1,2 -1,0 -1))
left	POLYGON((-1 0,-1 2,1 2,1 0,-1 0))
SELECT name, AsText(square) from t1 where Touches(@p, square);
name	AsText(square)
right2	POLYGON((2 0,4 0,4 2,2 2,2 0))
up2	POLYGON((0 2,2 2,2 4,0 4,0 2))
down2	POLYGON((0 -2,2 -2,2 0,0 0,0 -2))
left2	POLYGON((-2 0,0 0,0 2,-2 2,-2 0))
SELECT name, AsText(square) from t1 where Within(@p, square);
name	AsText(square)
big	POLYGON((0 0,0 3,3 3,3 0,0 0))
SET @vert1   = GeomFromText('POLYGON ((0 -2, 0 2, 0 -2))');
SET @horiz1  = GeomFromText('POLYGON ((-2 0, 2 0, -2 0))');
SET @horiz2 = GeomFromText('POLYGON ((-1 0, 3 0, -1 0))');
SET @horiz3 = GeomFromText('POLYGON ((2 0, 3 0, 2 0))');
SET @point1 = GeomFromText('POLYGON ((0 0))');
SET @point2 = GeomFromText('POLYGON ((-2 0))');
SELECT GROUP_CONCAT(a1.name ORDER BY a1.name) AS overlaps FROM t1 a1 WHERE Overlaps(a1.square, @vert1) GROUP BY a1.name;
overlaps
SELECT GROUP_CONCAT(a1.name ORDER BY a1.name) AS overlaps FROM t1 a1 WHERE Overlaps(a1.square, @horiz1) GROUP BY a1.name;
overlaps
SELECT Overlaps(@horiz1, @vert1) FROM DUAL;
Overlaps(@horiz1, @vert1)
0
SELECT Overlaps(@horiz1, @horiz2) FROM DUAL;
Overlaps(@horiz1, @horiz2)
1
SELECT Overlaps(@horiz1, @horiz3) FROM DUAL;
Overlaps(@horiz1, @horiz3)
0
SELECT Overlaps(@horiz1, @point1) FROM DUAL;
Overlaps(@horiz1, @point1)
0
SELECT Overlaps(@horiz1, @point2) FROM DUAL;
Overlaps(@horiz1, @point2)
0
DROP TABLE t1;
create table t1 (i int not null, g geometry not null)engine=innodb;
insert into t1 values (1, POINT(1,1));
insert into t1 values (2, POINT(1.5,1.5));
insert into t1 values (3, POINT(3,3));
insert into t1 values (4, POINT(3.1,3.1));
insert into t1 values (5, POINT(5,5));
alter table t1 add primary key(i), algorithm=inplace;
alter table t1 drop primary key;
create spatial index idx on t1(g) algorithm=inplace;
create spatial index idx2 on t1(g);
Warnings:
Warning	1831	Duplicate index 'idx2' defined on the table 'test.t1'. This is deprecated and will be disallowed in a future release.
alter table t1 add primary key(i), algorithm=inplace;
show create table t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `i` int(11) NOT NULL,
  `g` geometry NOT NULL,
  PRIMARY KEY (`i`),
  SPATIAL KEY `idx` (`g`),
  SPATIAL KEY `idx2` (`g`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1
drop index idx on t1;
drop table t1;
