###############################################################################
#                                                                             #
# This test is aimed to focus on the properties and attributes of the         #
# Polygon and MultiPolygon class                                              #
#                                                                             #
# The Polygon and MultiPolygon class has a number of properties               #
# that are specific to a Polygon and MultiPolygon and certain                 #
# properties that are common to all Geometry subclasses                       #
#                                                                             #
# Creation Date: 2013-9-2                                                     #
# Author : Tanjot Singh Uppal                                                 #
#                                                                             #
# Description:Test Cases of the Polygon and MultiPolygon class                #
# Properties                                                                  #
#                                                                             #
###############################################################################


--source include/force_myisam_default.inc
--source include/not_embedded.inc
--source include/have_geometry.inc

#Confirming the storage engine
--echo #Confirming the storage engine
SHOW VARIABLES LIKE '%engine%';

############################################################################################
# Creating the spatial objects                                                             #
############################################################################################

--echo #Creating the spatial Geometry object
USE test;

--disable_warnings
DROP TABLE IF EXISTS gis_polygon, gis_multi_polygon;
--enable_warnings

CREATE TABLE gis_polygon   (fid INTEGER NOT NULL PRIMARY KEY, g POLYGON);
CREATE TABLE gis_multi_polygon  (fid INTEGER NOT NULL PRIMARY KEY, g MULTIPOLYGON);

############################################################################################
# Inserting the values specific to the spatial objects                                     #
############################################################################################

--echo #INSERT valid entries to Polygon class
--disable_warnings
--error ER_GIS_INVALID_DATA
INSERT INTO gis_polygon VALUES
(301, PolygonFromText('POLYGON((10 10,20 10,20 20,10 20,10 10))')),
(302, PolyFromText('POLYGON((0 0,50 0,50 50,0 50,0 0), (10 10,20 10,20 20,10 20,10 10))')),
(303, PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(0, 0)))))),
(304, PolygonFromText('POLYGON((10 10,20 10,20 20,10 20,10 10))')),
(305, PolyFromText('POLYGON((0 0,50 0,50 50,0 50,0 0), (10 10,20 10,20 20,10 20,10 10))')),
(306, PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(0, 0)))))),
(307, PolygonFromText('POLYGON((0 0,0 0,0 0,0 0,0 0))')),
(308, PolyFromText('POLYGON((0 0,0 0,0 0,0 0,0 0), (0 0,0 0,0 0,0 0,0 0))')),
(309, PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0)))))),
(310, PolygonFromText('POLYGON((1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1))')),
(311, PolyFromText('POLYGON((1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1), (1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1,1 1))')),
(312, PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(1, 0), Point(0, 2), Point(5, 0), Point(-0, 6), Point(0, -0), Point(0, 9), Point(54, 0), Point(10, 0), Point(13, 0), Point(20, 0), Point(0, 40), Point(0, 5), Point(0, 4), Point(0, 3), Point(0, 2), Point(0, 1), Point(0, 90), Point(0, 9), Point(90, 0), Point(30, 0), Point(60, 0), Point(20, 0), Point(90, 90), Point(70, 50), Point(0, 0)))))),
(313, PolygonFromText
(314, PolyFromText('POLYGON((999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999), (999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999))')),
(315, PolyFromWKB(AsWKB(Polygon(LineString(Pointointointoint(999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999, 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999))))));
--enable_warnings

--echo #INSERT invalid entries to Polygon class
--disable_warnings
--error ER_GIS_INVALID_DATA
INSERT INTO gis_polygon VALUES
(316, PolygonFromText('POLYGON((Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç))')),
(317, PolyFromText('POLYGON((Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç), (Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç,Ç Ç))')),
(318, PolyFromWKB(AsWKB(Polygon(LineString(Point('Ç', 'Ç'), Point('Ç', 'Ç'), Point('Ç', 'Ç'), Point('Ç', 'Ç')))))),
(319, PolygonFromText('POLYGON((1 1,1 ))')),
(320, PolyFromText('POLYGON((1 1,1), (1 1,1))')),
(322, PolygonFromText('POLYGON(())')),
(323, PolyFromText('POLYGON((), (1 1))')),
(324, PolyFromText('POLYGON((), ())')),
(327, PolygonFromText('POLYGON((a b))')),
(328, PolyFromText('POLYGON((a b), (1 2))')),
(329, PolyFromWKB(AsWKB(Polygon(LineString(Point('a', 'b'), Point(1, 1), Point(2, 2), Point(1, 1)))))),
(330, PolygonFromText('POLYGON((-0))')),
(331, PolyFromText('POLYGON((-0), (-0))')),
(333, PolygonFromText
(334, PolyFromText
(335, PolyFromWKB('AsWKB(Polygon(LineString(Pointointointoint(999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999))))')),
(336, PolygonFromText('POLYGON((NULL))')),
(337, PolyFromText('POLYGON((NULL), (NULL))')),
(339, PolyFromWKB(AsWKB(Polygon(LineString(Point('a', 'b'), Point(1, 1), Point(2, 2), Point(1, 1), Point(0, 0)))))),
(340, PolyFromWKB(AsWKB(Polygon(LineString(Point(-0, 'b'), Point(1, 1), Point(2, 2), Point(1, 1), Point(0, 0)))))),
(341, PolyFromWKB(AsWKB(Polygon(LineString(Point(-0, 'b'), Point(1, 1), Point(2, 2), Point(1, 1), Point('$', 0)))))),
(342, PolyFromWKB(AsWKB(Polygon(LineString(Point(-0, -0), Point(1, 1), Point(2, 2), Point(1, 1), Point(0, 0))))));
--enable_warnings

--echo #Checking the integrity of the above insert statements 
select count(g) from gis_polygon;

select count(astext(g)) from gis_polygon;

select count(distinct(g)) from gis_polygon;

select count(distinct(astext(g))) from gis_polygon;


--echo #INSERT valid entries to multi_polygon class
--disable_warnings
--error ER_GIS_INVALID_DATA
INSERT INTO gis_multi_polygon VALUES
(601, MultiPolygonFromText('MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26),(52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))')),
(602, MPolyFromText('MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26), (52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))')),
(603, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 3), Point(3, 3), Point(3, 0), Point(0, 3))))))),
(604, MultiPolygonFromText('MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26),(52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))')),
(605, MPolyFromText('MULTIPOLYGON(((28 26,28 0,84 0,84 42,28 26), (52 18,66 23,73 9,48 6,52 18)),((59 18,67 18,67 13,59 13,59 18)))')),
(606, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 3), Point(3, 3), Point(3, 0), Point(0, 3))))))),
(607, MultiPolygonFromText('MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))')),
(608, MPolyFromText('MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0), (0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))')),
(609, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0))))))),
(610, MultiPolygonFromText('MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))')),
(611, MPolyFromText('MULTIPOLYGON(((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0),(0 0,0 0,0 0,0 0,0 0)),((0 0,0 0,0 0,0 0,0 0)))')),
(612, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0), Point(0, 0))))))),
(613, MultiPolygonFromText
(614, MPolyFromText
(615, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point

--echo #INSERT invalid entries to multi_polygon class
--error ER_GIS_INVALID_DATA
INSERT INTO gis_multi_polygon VALUES
(616, MultiPolygonFromText('MULTIPOLYGON(((),()),(()))')),
(617, MPolyFromText('MULTIPOLYGON(((), ()),(()))')),
(619, MultiPolygonFromText('MULTIPOLYGON(((NULL),(NULL)),((NULL)))')),
(620, MPolyFromText('MULTIPOLYGON(((NULL), (NULL)),((NULL)))')),
(622, MultiPolygonFromText('MULTIPOLYGON(((ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ),(ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ)),((ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ)))')),
(623, MPolyFromText('MULTIPOLYGON(((ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ), (ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ)),((ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ, ëô ôÑ)))')),
(624, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('ôÑ', 'ëô'), Point('ôÑ', 'ëô'), Point('ôÑ', 'ëô'), Point('ôÑ', 'ëô'))))))),
(625, MultiPolygonFromText('MULTIPOLYGON(((a 1,2 3,4 5,5 6),(0 1,2 3,4 5,5 6)),((9 1,2 3,4 5,5 6)))')),
(626, MPolyFromText('MULTIPOLYGON(((a 1,2 3,4 5,5 6),(0 1,2 3,4 5,5 6)),((9 1,2 3,4 5,5 6)))')),
(628, MultiPolygonFromText('MULTIPOLYGON(((-0),(-0)),((-0)))')),
(629, MPolyFromText('MULTIPOLYGON(((-0),(0 1, 2 3,4 5,5 6)),((9 1, 2 3,4 5,5 6)))')),
(631, MultiPolygonFromText('MULTIPOLYGON(((0 0 0 0 0),(1 1 1 1 1)),((3 3 3 3 3)))')),
(632, MPolyFromText('MULTIPOLYGON(((4 4 4 4 4),(5 5 5 5 5)),((7 7 7 7 7)))')),
(634, MultiPolygonFromText('MULTIPOLYGON(((@ $),(% -&)),((1, 2)))')),
(635, MPolyFromText('MULTIPOLYGON(((@ $),(% -&)),((1, 2)))')),
(636, MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('#', '-$'), Point('!', '~'), Point('^', '*'), Point('-', '?')))))));
--enable_warnings

--echo #Checking the integrity of the above insert statements 
select count(g) from gis_multi_polygon;

select count(astext(g)) from gis_multi_polygon;

select count(distinct(g)) from gis_multi_polygon;

select count(distinct(astext(g))) from gis_multi_polygon;


############################################################################################
# Displaying the spatial data from all the spatial objects created                         #
############################################################################################

--echo #Displaying the inserted spatial Data
Select fid, AsText(g) from gis_polygon;
Select fid, AsText(g) from gis_multi_polygon;

############################################################################################
# Checking the geometry types for the Polygon and the MulytiPolygon class                  #
############################################################################################

--echo #Checking the geometry types for the Polygon and the MulytiPolygon class 
select fid,GeometryType(g) from gis_polygon where g is not NULL;
select count(GeometryType(g)) FROM gis_polygon;


select fid,GeometryType(g) from gis_multi_polygon where g is not NULL;
select count(GeometryType(g)) FROM gis_multi_polygon;


--echo #Checking the geometry types of some random Polygon and MultiPolygon.
Select GeometryType(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));

Select GeometryType(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));

Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));

Select GeometryType(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'));

Select GeometryType(MPolyFromText('MULTIPOLYGON(((10 10,20 10,20 20,10 20),(14 14,14 16,16 16,16 14)),((0 0,0 2,2 2,2 0,0 0)))'));

Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select GeometryType(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));


--echo #WKB data, little-endian format
Select GeometryType(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));

Select GeometryType(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));

Select GeometryType(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));


--echo #WKB data, big-endian format
Select GeometryType(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));

Select GeometryType(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));

Select GeometryType(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));


Select GeometryType(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));

Select GeometryType(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));

Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));

Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select GeometryType(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));


--error ER_GIS_INVALID_DATA
Select GeometryType(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));

--error ER_GIS_INVALID_DATA
Select GeometryType(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));

--disable_warnings
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--error ER_GIS_INVALID_DATA
Select GeometryType(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--disable_warnings
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));

--enable_warnings

Select GeometryType(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select GeometryType(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));

Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select GeometryType(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));


### The below section is commented till the BUG@17167633 is fixed
#Select GeometryType(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0))'));
#
#Select GeometryType(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'));
#
--disable_warnings
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));

--enable_warnings
#Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
#Select GeometryType(MPolyFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
--disable_warnings
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select GeometryType(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));

--error ER_GIS_INVALID_DATA
Select GeometryType(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));

--disable_warnings
Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--error ER_GIS_INVALID_DATA
Select GeometryType(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--disable_warnings
Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));

--enable_warnings

--disable_warnings
--error ER_GIS_INVALID_DATA
Select GeometryType(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));

Select GeometryType(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = GeometryType(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));

Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));

Select GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = GeometryType(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));

Select GeometryType(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = GeometryType(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));

Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));

Select GeometryType(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = GeometryType(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select GeometryType(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select GeometryType(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select GeometryType(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select GeometryType(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);

############################################################################################
# Checking the SRID for the Polygon and the MulytiPolygon class                            #
############################################################################################

--echo #Checking the SRID for the Polygon and the MulytiPolygon class 
select fid,SRID(g) from gis_polygon where g is not NULL;
select count(SRID(g)) FROM gis_polygon;


select fid,SRID(g) from gis_multi_polygon where g is not NULL;
select count(SRID(g)) FROM gis_multi_polygon;


--echo #Checking the SRID of some random Polygon and MultiPolygon.
Select SRID(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));

Select SRID(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));

Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));

Select SRID(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select SRID(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));


--echo #WKB data, little-endian format
Select SRID(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));

Select SRID(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));

Select SRID(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));


--echo #WKB data, big-endian format
Select SRID(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));

Select SRID(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));

Select SRID(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));


Select SRID(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));

Select SRID(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));

Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));

Select SRID(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'));

Select SRID(MPolyFromText('MULTIPOLYGON(((10 10,20 10,20 20,10 20),(14 14,14 16,16 16,16 14)),((0 0,0 2,2 2,2 0,0 0)))'));

Select SRID(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select SRID(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));


--error ER_GIS_INVALID_DATA
Select SRID(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));

--error ER_GIS_INVALID_DATA
Select SRID(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));

--disable_warnings
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--error ER_GIS_INVALID_DATA
Select SRID(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--disable_warnings
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));

--enable_warnings

Select SRID(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select SRID(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));

Select SRID(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select SRID(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));


### The below section is commented till the BUG@17167633 is fixed
#Select SRID(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0))'));
#
#Select SRID(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'));
#
--disable_warnings
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));

--enable_warnings
#Select SRID(MultiPolygonFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
#Select SRID(MPolyFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
--disable_warnings
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select SRID(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));

--error ER_GIS_INVALID_DATA
Select SRID(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));

--disable_warnings
Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select SRID(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--error ER_GIS_INVALID_DATA
Select SRID(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--disable_warnings
Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));

--enable_warnings

--disable_warnings
--error ER_GIS_INVALID_DATA
Select SRID(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));

Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = SRID(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));

Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));

Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = SRID(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));

Select SRID(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));

Select SRID(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = SRID(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));

Select SRID(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = SRID(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));

--enable_warnings

Select SRID(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))',0));

Select SRID(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))',10000));

Select SRID(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000,123456));

Select SRID(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000,123456789));

Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))),4294967295));

Select SRID(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',0));

Select SRID(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',20000));

Select SRID(MPolyFromWKB(0x

Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))),4294967295));


Select SRID(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))',-1));

Select SRID(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))',-1024));

Select SRID(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))),4294967296));

Select SRID(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000,429496729510));

Select SRID(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000,42949672950000));

Select SRID(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',-1));

Select SRID(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))',-1024));

Select SRID(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040,4294967296));

Select SRID(MPolyFromWKB(0x

Select SRID(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))),42949672950000));


--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select SRID(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select SRID(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select SRID(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select SRID(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);

############################################################################################
# Checking the Dimension for the Polygon and the MulytiPolygon class                       #
############################################################################################

--echo #Checking the Dimension for the Polygon and the MulytiPolygon class 
select fid,Dimension(g) from gis_polygon where g is not NULL;
select count(Dimension(g)) FROM gis_polygon;


select fid,Dimension(g) from gis_multi_polygon where g is not NULL;
select count(Dimension(g)) FROM gis_multi_polygon;


--echo #Checking the Dimension of some random Polygon and MultiPolygon.
Select Dimension(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));

Select Dimension(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));

Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));

Select Dimension(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'));

Select Dimension(MPolyFromText('MULTIPOLYGON(((10 10,20 10,20 20,10 20),(14 14,14 16,16 16,16 14)),((0 0,0 2,2 2,2 0,0 0)))'));

Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select Dimension(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));


--echo #WKB data, little-endian format
Select Dimension(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));

Select Dimension(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));

Select Dimension(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));


--echo #WKB data, big-endian format
Select Dimension(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));

Select Dimension(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));

Select Dimension(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));


Select Dimension(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));

Select Dimension(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));

Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));

Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select Dimension(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));


--error ER_GIS_INVALID_DATA
Select Dimension(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));

--error ER_GIS_INVALID_DATA
Select Dimension(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));

--disable_warnings
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--error ER_GIS_INVALID_DATA
Select Dimension(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--disable_warnings
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));

--enable_warnings

Select Dimension(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select Dimension(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));

Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select Dimension(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));


### The below section is commented till the BUG@17167633 is fixed
#Select Dimension(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0))'));
#
#Select Dimension(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'));
#
--disable_warnings
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));

--enable_warnings
#Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
#Select Dimension(MPolyFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
--disable_warnings
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select Dimension(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));

--error ER_GIS_INVALID_DATA
Select Dimension(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));

--disable_warnings
Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--error ER_GIS_INVALID_DATA
Select Dimension(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--disable_warnings
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));

--enable_warnings

--disable_warnings
--error ER_GIS_INVALID_DATA
Select Dimension(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));

Select Dimension(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = Dimension(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));

Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));

Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = Dimension(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));

Select Dimension(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));

Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));

Select Dimension(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Dimension(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select Dimension(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select Dimension(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select Dimension(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select Dimension(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);

############################################################################################
# Checking the Envelope for the Polygon and the MulytiPolygon class                        #
############################################################################################

--echo #Checking the Envelope for the Polygon and the MulytiPolygon class 
--error ER_GIS_INVALID_DATA
select fid,AsText(Envelope(g)) from gis_polygon where g is not NULL;
--error ER_GIS_INVALID_DATA
select count(AsText(Envelope(g))) FROM gis_polygon;


--error ER_GIS_INVALID_DATA
select fid,AsText(Envelope(g)) from gis_multi_polygon where g is not NULL;
--error ER_GIS_INVALID_DATA
select count(AsText(Envelope(g))) FROM gis_multi_polygon;


--echo #Checking the Envelope of some random Polygon and MultiPolygon.
Select AsText(Envelope(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')));

Select AsText(Envelope(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))')));

Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));
Select AsText(Envelope(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))')));

Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((10 10,20 10,20 20,10 20),(14 14,14 16,16 16,16 14)),((0 0,0 2,2 2,2 0,0 0)))')));


Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')));

Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')));

Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))));


--echo #WKB data, little-endian format
Select AsText(Envelope(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000)));

Select AsText(Envelope(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));

Select AsText(Envelope(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));


--echo #WKB data, big-endian format
Select AsText(Envelope(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000)));

Select AsText(Envelope(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000)));

Select AsText(Envelope(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000)));


Select AsText(Envelope(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))')));

Select AsText(Envelope(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))')));

Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));

Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))')));

Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))')));

Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))))));


--error ER_GIS_INVALID_DATA
Select AsText(Envelope(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))')));

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))')));

--disable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')));

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')));

--disable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))));

--enable_warnings

Select AsText(Envelope(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));

Select AsText(Envelope(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));

Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));

Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))')));

Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))')));

Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))));


### The below section is commented till the BUG@17167633 is fixed
#Select AsText(Envelope(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0))')));
#
#Select AsText(Envelope(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))')));
#
--disable_warnings
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));

--enable_warnings
#Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))')));
#
#Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))')));
#
--disable_warnings
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')));

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))')));

--disable_warnings
Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')));

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')));

--disable_warnings
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))));

--enable_warnings
--error 1582
Select AsText(Envelope());

--disable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Envelope(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))) = AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.'))))))));

Select AsText(Envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))))) = AsText(Envelope(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))')));

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0)))))))) = AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë'))))))));

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0)))))))) = AsText(Envelope(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))')));

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))'))) = AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë'))))))));

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')));

--error ER_GIS_INVALID_DATA
Select AsText(Envelope(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Envelope(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))')));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(Envelope(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(Envelope(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(Envelope(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(Envelope(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000));

############################################################################################
# Checking the IsSimple for the Polygon and the MulytiPolygon class                        #
############################################################################################

--echo #Checking the IsSimple for the Polygon and the MulytiPolygon class 
select fid,IsSimple(g) from gis_polygon where g is not NULL;
select count(IsSimple(g)) FROM gis_polygon;


select fid,IsSimple(g) from gis_multi_polygon where g is not NULL;
select count(IsSimple(g)) FROM gis_multi_polygon;


--echo #Checking the IsSimple of some random Polygon and MultiPolygon.
Select IsSimple(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));

Select IsSimple(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));

Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));

Select IsSimple(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'));

Select IsSimple(MPolyFromText('MULTIPOLYGON(((10 10,20 10,20 20,10 20),(14 14,14 16,16 16,16 14)),((0 0,0 2,2 2,2 0,0 0)))'));

Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select IsSimple(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));

### The below section is commented till the BUG@17535294 is fixed
#select issimple(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'));
#
select issimple(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'));


--echo #WKB data, little-endian format
Select IsSimple(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));

Select IsSimple(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));

Select IsSimple(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));


--echo #WKB data, big-endian format
Select IsSimple(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));

Select IsSimple(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));

Select IsSimple(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));


Select IsSimple(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));

Select IsSimple(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));

Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));

Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select IsSimple(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));


--error ER_GIS_INVALID_DATA
Select IsSimple(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));

--error ER_GIS_INVALID_DATA
Select IsSimple(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));

--disable_warnings
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--error ER_GIS_INVALID_DATA
Select IsSimple(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--disable_warnings
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));

--enable_warnings

### The below section is commented till the BUG@17619288 is fixed
Select IsSimple(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

#Select IsSimple(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
#
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));

#Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
#
#Select IsSimple(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));
#
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));


### The below section is commented till the BUG@17167633 is fixed
#Select IsSimple(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0))'));
#
#Select IsSimple(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'));
#
--disable_warnings
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));

--enable_warnings
#Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
#Select IsSimple(MPolyFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
--disable_warnings
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select IsSimple(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));

--error ER_GIS_INVALID_DATA
Select IsSimple(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));

--disable_warnings
Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--error ER_GIS_INVALID_DATA
Select IsSimple(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--disable_warnings
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));

--enable_warnings
--error 1582
Select IsSimple();

--disable_warnings
--error ER_GIS_INVALID_DATA
Select IsSimple(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));

Select IsSimple(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = IsSimple(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));

Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));

Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = IsSimple(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));

Select IsSimple(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));

Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));

Select IsSimple(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsSimple(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select IsSimple(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select IsSimple(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select IsSimple(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select IsSimple(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);

############################################################################################
# Checking the IsEmpty for the Polygon and the MulytiPolygon class                        #
############################################################################################

--echo #Checking the IsEmpty for the Polygon and the MulytiPolygon class 
select fid,IsEmpty(g) from gis_polygon where g is not NULL;
select count(IsEmpty(g)) FROM gis_polygon;


select fid,IsEmpty(g) from gis_multi_polygon where g is not NULL;
select count(IsEmpty(g)) FROM gis_multi_polygon;


--echo #Checking the IsEmpty of some random Polygon and MultiPolygon.
Select IsEmpty(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));

Select IsEmpty(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));

Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));

Select IsEmpty(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'));

Select IsEmpty(MPolyFromText('MULTIPOLYGON(((10 10,20 10,20 20,10 20),(14 14,14 16,16 16,16 14)),((0 0,0 2,2 2,2 0,0 0)))'));

Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select IsEmpty(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));

select IsEmpty(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'));


--echo #WKB data, little-endian format
Select IsEmpty(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));

Select IsEmpty(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));

Select IsEmpty(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));


--echo #WKB data, big-endian format
Select IsEmpty(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));

Select IsEmpty(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));

Select IsEmpty(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));


Select IsEmpty(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));

Select IsEmpty(PolyFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0), (1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0))'));

Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0))))));

Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select IsEmpty(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));


--error ER_GIS_INVALID_DATA
Select IsEmpty(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));

--error ER_GIS_INVALID_DATA
Select IsEmpty(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));

--disable_warnings
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--error ER_GIS_INVALID_DATA
Select IsEmpty(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--disable_warnings
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));

--enable_warnings

Select IsEmpty(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select IsEmpty(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));

Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select IsEmpty(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));


### The below section is commented till the BUG@17167633 is fixed
#Select IsEmpty(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0))'));
#
#Select IsEmpty(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'));
#
--disable_warnings
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));

--enable_warnings
#Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
#Select IsEmpty(MPolyFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
--disable_warnings
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select IsEmpty(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));

--error ER_GIS_INVALID_DATA
Select IsEmpty(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));

--disable_warnings
Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--error ER_GIS_INVALID_DATA
Select IsEmpty(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--disable_warnings
Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));

--enable_warnings
--error 1582
Select IsEmpty();

--disable_warnings
--error ER_GIS_INVALID_DATA
Select IsEmpty(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));

Select IsEmpty(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = IsEmpty(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));

Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));

Select IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = IsEmpty(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));

Select IsEmpty(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = IsEmpty(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));

Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));

Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = IsEmpty(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select IsEmpty(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select IsEmpty(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select IsEmpty(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select IsEmpty(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);

############################################################################################
# Checking the Area for the Polygon and the MulytiPolygon class                            #
############################################################################################

--echo #Checking the Area for the Polygon and the MulytiPolygon class 
--error ER_GIS_INVALID_DATA
select fid,Area(g) from gis_polygon where g is not NULL;
--error ER_GIS_INVALID_DATA
select count(Area(g)) FROM gis_polygon;


--error ER_GIS_INVALID_DATA
select fid,Area(g) from gis_multi_polygon where g is not NULL;
--error ER_GIS_INVALID_DATA
select count(Area(g)) FROM gis_multi_polygon;


--echo #Checking the Area of some random Polygon and MultiPolygon.
Select Area(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))'));

Select Area(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));

Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))));

Select Area(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

Select Area(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));

#Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));
#
--error ER_GIS_INVALID_DATA
select Area(PolygonFromText('POLYGON((1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1, 1 1))'));

Select Area(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 1))'));


Select Area(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'));

Select Area(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (3 3, 2 5, 1 3, -1 2, 1 1, 3 3))'));

Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1), Point(3, 3))))));

Select Area(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'));

Select Area(MPolyFromText('MULTIPOLYGON(((10 10,20 10,20 20,10 20),(14 14,14 16,16 16,16 14)),((0 0,0 2,2 2,2 0,0 0)))'));

Select Area(MultiPolygonFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select Area(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));

Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1), Point(3, 3)))))));


--echo #WKB data, little-endian format
Select Area(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));

Select Area(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));

Select Area(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));


--echo #WKB data, big-endian format
Select Area(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));

Select Area(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));

Select Area(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));


--error ER_GIS_INVALID_DATA
Select Area(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));

--error ER_GIS_INVALID_DATA
Select Area(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));

--disable_warnings
Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('ë', '.1'), Point('.1', 'b'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select Area(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--error ER_GIS_INVALID_DATA
Select Area(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))'));

--disable_warnings
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('ë', '.1'), Point('.1', 'b')))))));

--enable_warnings

Select Area(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select Area(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));

Select Area(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select Area(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))'));

Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));


### The below section is commented till the BUG@17167633 is fixed
#Select Area(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0))'));
#
#Select Area(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'));
#
--disable_warnings
Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));

--enable_warnings
#Select Area(MultiPolygonFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
#Select Area(MPolyFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))'));
#
--disable_warnings
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select Area(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));

--error ER_GIS_INVALID_DATA
--error ER_GIS_INVALID_DATA
Select Area(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));

--disable_warnings
Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select Area(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--error ER_GIS_INVALID_DATA
Select Area(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))'));

--disable_warnings
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));

--enable_warnings
--error 1582
Select Area();

--disable_warnings
--error ER_GIS_INVALID_DATA
Select Area(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));

Select Area(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = Area(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));

--error ER_GIS_INVALID_DATA
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0))))))) = Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë')))))));
--error ER_GIS_INVALID_DATA
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0))))))) = Area(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))'));

--error ER_GIS_INVALID_DATA
Select Area(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))')) = Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë')))))));
--error ER_GIS_INVALID_DATA
Select Area(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Area(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'));
--error ER_GIS_INVALID_DATA
Select Area(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')) = Area(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))'));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select Area(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select Area(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select Area(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select Area(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000);

############################################################################################
# Checking the ExteriorRing for the Polygon  class                                         #
############################################################################################

--echo #Checking the ExteriorRing for the Polygon class 
select fid,AsText(ExteriorRing(g)) from gis_polygon where g is not NULL;
select count(AsText(ExteriorRing(g))) FROM gis_polygon;


--echo #Checking the ExteriorRing of some random Polygon.
Select AsText(ExteriorRing(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1), (1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))')));

Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(0, -2),  Point(1, 1)))))));

Select AsText(ExteriorRing(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))')));


--echo #WKB data, little-endian format
Select AsText(ExteriorRing(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000)));

Select AsText(ExteriorRing(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));


--echo #WKB data, big-endian format
Select AsText(ExteriorRing(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000)));

Select AsText(ExteriorRing(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000)));


Select AsText(ExteriorRing(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))')));

Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1)))))));


Select AsText(ExteriorRing(PolygonFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1), (6 1, 7 0, 8 1, 9 0, 10 1, 6 1))')));

Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(9, 2), Point(8, 1), Point(7, 2), Point(6, 1), Point(1, 1)))))));


--error ER_GIS_INVALID_DATA
Select AsText(ExteriorRing(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))')));

--error ER_GIS_INVALID_DATA
Select AsText(ExteriorRing(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))')));

--disable_warnings
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));


Select AsText(ExteriorRing(PolygonFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (-2 -2, -2 2, 2 -2, 2 2, -2 -2))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (1 1))')));


Select AsText(ExteriorRing(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (0 0, 1 0, 1 5, 0 5, 0 0))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (1 1))')));


Select AsText(ExteriorRing(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-2 2, 2 2, 2 -2, -2 -2, -2 2))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-2 2, 2 2, 2 -2, -2 -2, -2 2))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((-2 2, 2 2, 2 -2, -2 -2, -2 2), (-5 5, 5 5, 5 -5, -5 -5, -5 5))')));


Select AsText(ExteriorRing(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));

Select AsText(ExteriorRing(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));

Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));


### The below section is commented till the BUG@17167633 is fixed
#Select AsText(ExteriorRing(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0))')));
#
#Select AsText(ExteriorRing(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))')));
#
--disable_warnings
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select AsText(ExteriorRing(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')));

--error ER_GIS_INVALID_DATA
Select AsText(ExteriorRing(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))')));

--disable_warnings
Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));

--enable_warnings
--error 1582
Select AsText(ExteriorRing());

--disable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(ExteriorRing(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))) = AsText(ExteriorRing(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.'))))))));

Select AsText(ExteriorRing(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))))) = AsText(ExteriorRing(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))')));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(ExteriorRing(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(ExteriorRing(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));

############################################################################################
# Checking the InteriorRingN for the Polygon  class                                        #
############################################################################################

--echo #Checking the InteriorRingN for the Polygon class 
select fid,AsText(InteriorRingN(g, 0)) from gis_polygon where g is not NULL;
select fid,AsText(InteriorRingN(g, 1)) from gis_polygon where g is not NULL;
select fid,AsText(InteriorRingN(g, 2)) from gis_polygon where g is not NULL;
select fid,AsText(InteriorRingN(g, 3)) from gis_polygon where g is not NULL;
select count(AsText(InteriorRingN(g, 1))) FROM gis_polygon;


--echo #Checking the InteriorRingN of some random Polygon.
Select AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'), 1));

Select AsText(InteriorRingN(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1), (1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'), 1));

Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(0, -2),  Point(1, 1))))), 1));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'),10));


--echo #WKB data, little-endian format
Select AsText(InteriorRingN(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000),0));

Select AsText(InteriorRingN(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040),1));


--echo #WKB data, big-endian format
Select AsText(InteriorRingN(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000),1));

Select AsText(InteriorRingN(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000),1));


Select AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'), 1));

Select AsText(InteriorRingN(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'), 1));

Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1))))), 1));


Select AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1))'), 0.0));

Select AsText(InteriorRingN(PolyFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1), (6 1, 7 0, 8 1, 9 0, 10 1, 6 1))'), 1.0));

Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(9, 2), Point(8, 1), Point(7, 2), Point(6, 1), Point(1, 1))))), .1));


--error ER_GIS_INVALID_DATA
Select AsText(InteriorRingN(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'), 1.1));

--error ER_GIS_INVALID_DATA
Select AsText(InteriorRingN(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'), 1));

--disable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(InteriorRingN(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'), 'ë'));

Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))), -1));

--enable_warnings

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2))'), -1));

Select AsText(InteriorRingN(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'), 1));

Select AsText(InteriorRingN(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'), 2));

Select AsText(InteriorRingN(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (1 1))'), 2-1));


Select AsText(InteriorRingN(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))'), 1));

Select AsText(InteriorRingN(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (0 0, 0 5, 5 5, 5 0, 0 0))'), 1));

Select AsText(InteriorRingN(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (-100 -100))'), 1));


Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 0));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 1));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 3));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 4));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 5));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 6));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), -1));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 1.0));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 0.9));

Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2.4));

### The below section is commented till the BUG@17501803 is fixed
#Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2.49));
#
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 2.000001));

--disable_warnings
Select AsText(InteriorRingN(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'), 1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111));
--enable_warnings


Select AsText(InteriorRingN(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'), 1));

Select AsText(InteriorRingN(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'), 1));

Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))), 1));


### The below section is commented till the BUG@17167633 is fixed
#Select AsText(InteriorRingN(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'), 1));
#
#Select AsText(InteriorRingN(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'), 1));
#
--disable_warnings
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))), 1));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select AsText(InteriorRingN(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'), 1));

--error ER_GIS_INVALID_DATA
Select AsText(InteriorRingN(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'), 1));

--disable_warnings
Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))), 1));

--enable_warnings
--error 1582
Select AsText(InteriorRingN());

--disable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(InteriorRingN(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'), 1)) = AsText(InteriorRingN(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))), 1));

Select AsText(InteriorRingN(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))), 1)) = AsText(InteriorRingN(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'), 1));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(InteriorRingN(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000,1));
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(InteriorRingN(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000,1));

############################################################################################
# Checking the NumInteriorRings for the Polygon  class                                     #
############################################################################################

--echo #Checking the NumInteriorRings for the Polygon class 
select fid,NumInteriorRings(g) from gis_polygon where g is not NULL;
select count(NumInteriorRings(g)) FROM gis_polygon;


--echo #Checking the NumInteriorRings of some random Polygon.
Select NumInteriorRings(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'));

Select NumInteriorRings(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'));

Select NumInteriorRings(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1), (1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, -9 -2, 1 1))'));

Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(0, -2),  Point(1, 1))))));


--echo #WKB data, little-endian format
Select NumInteriorRings(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));

Select NumInteriorRings(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040));


--echo #WKB data, big-endian format
Select NumInteriorRings(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));

Select NumInteriorRings(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000));


Select NumInteriorRings(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'));

Select NumInteriorRings(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'));

Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1))))));


Select NumInteriorRings(PolygonFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1))'));

Select NumInteriorRings(PolyFromText('POLYGON((1 1, 10 1, 9 2, 8 1, 7 2, 6 1, 1 1), (6 1, 7 0, 8 1, 9 0, 10 1, 6 1))'));

Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(9, 2), Point(8, 1), Point(7, 2), Point(6, 1), Point(1, 1))))));


--error ER_GIS_INVALID_DATA
Select NumInteriorRings(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))'));

--error ER_GIS_INVALID_DATA
Select NumInteriorRings(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));

--error ER_GIS_INVALID_DATA
Select NumInteriorRings(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))'));

--disable_warnings
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))));


Select NumInteriorRings(PolygonFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2))'));

Select NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'));

Select NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'));

Select NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (1 1))'));


Select NumInteriorRings(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))'));

Select NumInteriorRings(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (0 0, 0 5, 5 5, 5 0, 0 0))'));

Select NumInteriorRings(PolyFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0), (-100 -100))'));

Select NumInteriorRings(PolygonFromText('POLYGON((-5 5, 5 5, 5 -5, -5 -5, -5 5), (-4 4, -4 -4, 4 -4, 4 4, -4 4), (-3 3, 3 3, 3 -3, -3 -3, -3 3), (-2 2, -2 -2, 2 -2, 2 2, -2 2), (-1 1, 1 1, 1 -1, -1 -1, -1 1), (0 0))'));


Select NumInteriorRings(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select NumInteriorRings(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));

Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))));


### The below section is commented till the BUG@17167633 is fixed
#Select NumInteriorRings(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'));
#
#Select NumInteriorRings(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))'));
#
--disable_warnings
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select NumInteriorRings(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'));

--error ER_GIS_INVALID_DATA
Select NumInteriorRings(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))'));

--disable_warnings
Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))));

--enable_warnings
--error 1582
Select NumInteriorRings());

--disable_warnings
--error ER_GIS_INVALID_DATA
Select NumInteriorRings(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')) = NumInteriorRings(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.')))))));

Select NumInteriorRings(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0)))))) = NumInteriorRings(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))'));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select NumInteriorRings(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000);
--error ER_GIS_DATA_WRONG_ENDIANESS
Select NumInteriorRings(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000);

############################################################################################
# Checking the Centroid for the Polygon and the MulytiPolygon class                        #
############################################################################################

--echo #Checking the Centroid for the Polygon and the MulytiPolygon class 
--error ER_GIS_INVALID_DATA
select fid,AsText(Centroid(g)) from gis_polygon where g is not NULL;
--error ER_GIS_INVALID_DATA
select count(AsText(Centroid(g))) FROM gis_polygon;


--error ER_GIS_INVALID_DATA
select fid,AsText(Centroid(g)) from gis_multi_polygon where g is not NULL;
--error ER_GIS_INVALID_DATA
select count(AsText(Centroid(g))) FROM gis_multi_polygon;


--echo #Checking the Centroid of some random Polygon and MultiPolygon.
Select AsText(Centroid(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')));

Select AsText(Centroid(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))')));

Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1)))))));

select AsText(Centroid(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))')));

select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((10 10,20 10,20 20,10 20),(14 14,14 16,16 16,16 14)),((0 0,0 2,2 2,2 0,0 0)))')));

Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')));

Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))')));

Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))));


--echo #WKB data, little-endian format
Select AsText(Centroid(PolyFromWKB(0x010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000)));

Select AsText(Centroid(PolyFromWKB(0x010300000002000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));

Select AsText(Centroid(MPolyFromWKB(0x010600000002000000010300000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000010300000001000000050000000000000000000040000000000000004000000000000000400000000000000840000000000000084000000000000008400000000000000840000000000000004000000000000000400000000000000040)));


--echo #WKB data, big-endian format
Select AsText(Centroid(PolyFromWKB(0x000000000300000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000)));

Select AsText(Centroid(PolyFromWKB(0x000000000300000002000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000000000054000000000000000400000000000000040000000000000004010000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000004000000000000000)));

Select AsText(Centroid(MPolyFromWKB(0x00000000060000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000)));


Select AsText(Centroid(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))')));

Select AsText(Centroid(PolyFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1), (1 1, 2 -1, 3 1, 1 1))')));

Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1)))))));

Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1),(1 1, 2 -1, 3 1, 1 1)),((1 1, 2 -1, 3 1, 1 1)))')));

Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1),(1 1, 2 -1, 3 1, 1 1)),((1 1, 2 -1, 3 1, 1 1)))')));

Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(2, -1), Point(3, 1), Point(5, 2), Point(3, 3), Point(2, 5), Point(1, 3), Point(-1, 2), Point(1, 1))))))));


--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolygonFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b ))')));

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolyFromText('POLYGON((0.1 b, a -0, -0 ë,0.1 b), (0.1 b, a -0, -0 ë,0.1 b))')));

--disable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b')))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')));

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((0.1 b, a -0, -0 ë,0.1 b),(0.1 b, a -0, -0 ë,0.1 b)),((0.1 b, a -0, -0 ë,0.1 b)))')));

--disable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point('-0', 'ë'), Point('.1', 'b'))))))));

--enable_warnings

Select AsText(Centroid(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));

Select AsText(Centroid(PolyFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251), (0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))')));

Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));

Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))')));

Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251),(0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)),((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251)))')));

Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251'))))))));


### The below section is commented till the BUG@17167633 is fixed
#Select AsText(Centroid(PolygonFromText('POLYGON((.1 0, 1 1, 2 2,.1 0))')));
#
#Select AsText(Centroid(PolyFromText('POLYGON((.1 0, 1 1, 2 2,.1 0), (.1 0, 1 1, 2 2,.1 0))')));
#
--disable_warnings
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0')))))));

--enable_warnings
#Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))')));
#
#Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((.1 0, 1 1, 2 2,.1 0),(.1 0, 1 1, 2 2,.1 0)),((.1 0, 1 1, 2 2,.1 0)))')));
#
--disable_warnings
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))));

--enable_warnings

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))')));

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolyFromText('POLYGON((. ., 1 ~, ^ -000011111,. .), (. ., 1 ~, ^ -000011111,. .))')));

--disable_warnings
Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));

--enable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')));

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(MPolyFromText('MULTIPOLYGON(((. ., 1 ~, ^ -000011111,. .),(. ., 1 ~, ^ -000011111,. .)),((. ., 1 ~, ^ -000011111,. .)))')));

--disable_warnings
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.'))))))));

--enable_warnings
--error 1582
Select AsText(Centroid());

Select AsText(Centroid(PolyFromText('POLYGON((1 1, 10 1, 10 20, 1 20,1 1), (-1 -1, -10 -1, -10 -15, -1 -15, -1 -1))')));

Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1,10 20, 1 20, 1 1),(-1 -1, -10 -1, -10 -15, -1 -15, -1 -1)))')));

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolyFromText('POLYGON((1 1, 10 1, 10 20, 1 20,1 1), (5 5))')));

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolyFromText('POLYGON((1 0, 2 0, 3 0, 4 0, 5 0,1 0), (2 0, 3 0, 2 0))')));

Select AsText(Centroid(PolygonFromText('POLYGON((1234.7777665 -35242.89876, -0276354.77777 -1111.0000, 22222.989898 0000000.2322322 ,1234.7777665 -35242.89876))')));


--disable_warnings
--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolygonFromText('POLYGON((. ., 1 ~, ^ -000011111,. .))'))) = AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^','-000011111'),Point('.', '.'))))))));

Select AsText(Centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('-0000', '-.999999999'),Point(0, 0))))))) = AsText(Centroid(PolygonFromText('POLYGON((0.1 0, 1 1, 2 2,0.1 0))')));

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point(0, 0)))))))) = AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0.1, 'ë'),  Point(0.1, 'ë'))))))));
--error ER_GIS_INVALID_DATA
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(0, 0), Point(-0, -0)))))))) = AsText(Centroid(PolygonFromText('POLYGON((2.2 0, -9 99.99, 2.2 0))')));

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolygonFromText('POLYGON((1 1, 10 1, 4 2, 1 1))'))) = AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', 'b'), Point('a', '-0'), Point(0.1, 'ë'))))))));
--error ER_GIS_INVALID_DATA
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))')));
--error ER_GIS_INVALID_DATA
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1)), ((1 1, 1 1)))'))) = AsText(Centroid(PolygonFromText('POLYGON((0.99999 1, 360.000001 -0.4, -0 -0,0.99999 1))')));

--enable_warnings

--echo #Invalid WKB data
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(Centroid(0x000000000200000001000000050000000000000000000000000000000000000000000000004014000000000000401400000000000040140000000000004014000000000000000000000000000000000000000000000000000000000000));
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(Centroid(0x010500000001000000050000000000000000000000000000000000000000000000000000000000000000001440000000000000144000000000000014400000000000001440000000000000000000000000000000000000000000000000));
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(Centroid(0x00000000070000000200000000030000000200000005000000000000000000000000000000000000000000000000401400000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000000000000000000000000004400000000000000040000000000000004000000000000000401000000000000040100000000000004010000000000000400000000000000040000000000000000000000003000000010000000400000000000000000000000000000000000000000000000040140000000000004014000000000000401400000000000000000000000000000000000000000000));
--error ER_GIS_DATA_WRONG_ENDIANESS
Select AsText(Centroid(0x01030000000200000001030000000200000005000000000000000000000000000000000000000000000000000000000000000000144000000000000014400000000000001440000000000000144000000000000000000000000000000000000000000000000004000000000000000000004000000000000000400000000000000040000000000000104000000000000010400000000000001040000000000000004000000000000000400103000000010000000400000000000000000000000000000000000000000000000000000000000000000014400000000000001440000000000000144000000000000000000000000000000000));

############################################################################################
# Checking the procedure with the Attribute of Polygon and MultPolygon class               #
############################################################################################

--echo #Checking the procedure with the Attribute of Polygon and MultPolygon class
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
--disable_warnings
delimiter |;
--echo #create procedure to check Attributes
CREATE PROCEDURE poly_attri()
BEGIN
Select GeometryType(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))'));
Select GeometryType(MPolyFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
Select SRID(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));
Select SRID(MPolyFromText('MULTIPOLYGON(((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0),(1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)),((1 0, 10 0, 1 -1, 10 -1, 1 -2, 1 0)))'));
Select Dimension(PolygonFromText('POLYGON((1 0, 10 0, 1 -1, 10 -1, 1 -2, 10 -2, 5 1, 1 -5, 1 0))'));
Select Dimension(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 0), Point(10, 0), Point(1, -1), Point(10, -1), Point(1, -2), Point(10, -2), Point(5, 1), Point(1, -5), Point(1, 0)))))));
Select AsText(Envelope(PolyFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 1 1), (10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1,10 -1))')));
Select AsText(Envelope(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point(1, 1), Point(10, 1), Point(1, 0), Point(10, 0), Point(4, 2), Point(4, -2), Point(1, 1))))))));
Select IsSimple(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
Select IsSimple(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.', '.'), Point('1', '~'), Point('^', '-000011111'),Point('.', '.')))))));
Select IsEmpty(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 1 0, 10 0, 1 1),(10 0, 1 -1, 10 -1, 7 2, 7 -2, 10 0)),((7 -2, 4 2, 4 -2, 1 1, 7 -2)))'));
Select IsEmpty(PolygonFromText('POLYGON((0.9999 7654.24251, 634736.736354 1.0987, 9087.9097 00000,0.9999 7654.24251))'));
Select Area(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'));
Select Area(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('0.9999', '7654.24251'), Point('634736.736354', '1.0987'), Point('9087.9097', '00000'), Point('0.9999', '7654.24251')))))));
Select AsText(ExteriorRing(PolygonFromText('POLYGON((0 0, 5 0, 5 5, 0 5, 0 0, -5 0, -5 5, 0 5, 0 0))')));
Select AsText(InteriorRingN(PolygonFromText('POLYGON((1 1, 2 -1, 3 1, 5 2, 3 3, 2 5, 1 3, -1 2, 1 1))'), 1));
Select NumInteriorRings(PolyFromText('POLYGON((-2 -2, -2 2, 2 -2, 2 2, -2 -2), (0 0), (5 5, 6 5, 6 6, 5 6, 5 5))'));
Select AsText(Centroid(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')));
Select AsText(Centroid(MPolyFromWKB(AsWKB(MultiPolygon(Polygon(LineString(Point('.1', '0'), Point('1', '1'), Point('2', '2'),Point('.1', '0'))))))));
END |
delimiter ;|

--echo #call the proc
CALL poly_attri;



















--enable_warnings
SET sql_mode = default;
--echo #Dropping the created procedures.
drop procedure poly_attri;

############################################################################################
# Checking the Polygon and MultiPolygon properties from within the cursor                  #
############################################################################################

--echo #Checking the Polygon and MultiPolygon properties from within the cursor 
CREATE TABLE gis_polygon_cursor select * from gis_polygon limit 1;

delimiter |;
CREATE PROCEDURE poly_attri_cursor()
BEGIN
  DECLARE v POLYGON;
  DECLARE c CURSOR FOR Select g from gis_polygon_cursor;
  OPEN c;
  FETCH c INTO v;
  Select AsText(v);
  Select GeometryType(v);
  Select SRID(v);
  Select Dimension(v);
  Select AsText(Envelope(v));
  Select IsSimple(v);
  Select IsEmpty(v);
  Select Area(v);
  Select AsText(ExteriorRing(v));
  Select AsText(InteriorRingN(v, 1));
  Select NumInteriorRings(v);
  Select AsText(Centroid(v));
  CLOSE c;
END|
delimiter ;|

--echo #Calling the cursor
CALL poly_attri_cursor();

--echo #Dropping the created cursor
drop procedure poly_attri_cursor;
drop table gis_polygon_cursor;

############################################################################################
# Checking the Self join with the Polygon and MultiPolygon Attributes                      #
############################################################################################

--echo #Checking the Self join with the Polygon and MultiPolygon Attributes 
--echo check self join
--error ER_GIS_INVALID_DATA
SELECT GeometryType(a.g), SRID(a.g), Dimension(a.g), IsSimple(a.g), IsClosed(a.g),
AsText(Envelope(a.g)), IsSimple(a.g), IsEmpty(a.g), Area(a.g), AsText(ExteriorRing(a.g)),
AsText(InteriorRingN(a.g, 1)), NumInteriorRings(a.g), AsText(Centroid(a.g)) 
FROM gis_polygon a,gis_polygon b WHERE GeometryType(a.g)=GeometryType(b.g) AND 
SRID(a.g)=SRID(b.g) AND Dimension(a.g)=Dimension(b.g) AND Envelope(a.g)=Envelope(b.g) AND 
IsSimple(a.g)=IsSimple(b.g) AND IsEmpty(a.g)=IsEmpty(b.g) AND Area(a.g)=Area(b.g) AND
ExteriorRing(a.g)=ExteriorRing(b.g) AND InteriorRingN(a.g, 1)=InteriorRingN(b.g, 1) AND 
NumInteriorRings(a.g)=NumInteriorRings(b.g) and Centroid(a.g)=Centroid(a.g);

############################################################################################
# Checking the aggregate functions on the Polygon and Multipolygon Class                   #
############################################################################################

--echo #Checking the aggregate functions on the Line and MultiLine Attributes 
--echo #Checking the SUM function
select SUM(GeometryType(g)) FROM gis_polygon;

select SUM(GeometryType(g)) FROM gis_multi_polygon;

select SUM(SRID(g)) FROM gis_polygon;

select SUM(SRID(g)) FROM gis_multi_polygon;

select SUM(Dimension(g)) FROM gis_polygon;

select SUM(Dimension(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select SUM(AsText(Envelope(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select SUM(AsText(Envelope(g))) FROM gis_multi_polygon;

select SUM(IsSimple(g)) FROM gis_polygon;

select SUM(IsSimple(g)) FROM gis_multi_polygon;

select SUM(IsEmpty(g)) FROM gis_polygon;

select SUM(IsEmpty(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select SUM(Area(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select SUM(Area(g)) FROM gis_multi_polygon;

select SUM(AsText(ExteriorRing(g))) FROM gis_polygon;

select SUM(AsText(InteriorRingN(g, 1))) FROM gis_polygon;

select SUM(NumInteriorRings(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select SUM(AsText(Centroid(g))) FROM gis_polygon;
--error ER_GIS_INVALID_DATA

select SUM(AsText(Centroid(g))) FROM gis_multi_polygon;


--echo #Checking the MIN function
select MIN(GeometryType(g)) FROM gis_polygon;

select MIN(GeometryType(g)) FROM gis_multi_polygon;

select MIN(SRID(g)) FROM gis_polygon;

select MIN(SRID(g)) FROM gis_multi_polygon;

select MIN(Dimension(g)) FROM gis_polygon;

select MIN(Dimension(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select MIN(AsText(Envelope(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select MIN(AsText(Envelope(g))) FROM gis_multi_polygon;

select MIN(IsSimple(g)) FROM gis_polygon;

select MIN(IsSimple(g)) FROM gis_multi_polygon;

select MIN(IsEmpty(g)) FROM gis_polygon;

select MIN(IsEmpty(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select MIN(Area(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select MIN(Area(g)) FROM gis_multi_polygon;

select MIN(AsText(ExteriorRing(g))) FROM gis_polygon;

select MIN(AsText(InteriorRingN(g, 1))) FROM gis_polygon;

select MIN(NumInteriorRings(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select MIN(AsText(Centroid(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select MIN(AsText(Centroid(g))) FROM gis_multi_polygon;


--echo #Checking the MAX function
select MAX(GeometryType(g)) FROM gis_polygon;

select MAX(GeometryType(g)) FROM gis_multi_polygon;

select MAX(SRID(g)) FROM gis_polygon;

select MAX(SRID(g)) FROM gis_multi_polygon;

select MAX(Dimension(g)) FROM gis_polygon;

select MAX(Dimension(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select MAX(AsText(Envelope(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select MAX(AsText(Envelope(g))) FROM gis_multi_polygon;

select MAX(IsSimple(g)) FROM gis_polygon;

select MAX(IsSimple(g)) FROM gis_multi_polygon;

select MAX(IsEmpty(g)) FROM gis_polygon;

select MAX(IsEmpty(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select MAX(Area(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select MAX(Area(g)) FROM gis_multi_polygon;

select MAX(AsText(ExteriorRing(g))) FROM gis_polygon;

select MAX(AsText(InteriorRingN(g, 1))) FROM gis_polygon;

select MAX(NuminteriorRings(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select MAX(AsText(Centroid(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select MAX(AsText(Centroid(g))) FROM gis_multi_polygon;


--echo #Checking the STD function
select STD(GeometryType(g)) FROM gis_polygon;

select STD(GeometryType(g)) FROM gis_multi_polygon;

select STD(SRID(g)) FROM gis_polygon;

select STD(SRID(g)) FROM gis_multi_polygon;

select STD(Dimension(g)) FROM gis_polygon;

select STD(Dimension(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select STD(AsText(Envelope(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select STD(AsText(Envelope(g))) FROM gis_multi_polygon;

select STD(IsSimple(g)) FROM gis_polygon;

select STD(IsSimple(g)) FROM gis_multi_polygon;

select STD(IsEmpty(g)) FROM gis_polygon;

select STD(IsEmpty(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select STD(Area(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select STD(Area(g)) FROM gis_multi_polygon;

select STD(AsText(ExteriorRing(g))) FROM gis_polygon;

select STD(AsText(InteriorRingN(g, 1))) FROM gis_polygon;

select STD(NumInteriorRings(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select STD(AsText(Centroid(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select STD(AsText(Centroid(g))) FROM gis_multi_polygon;


--echo #Checking the AVG function
select AVG(GeometryType(g)) FROM gis_polygon;

select AVG(GeometryType(g)) FROM gis_multi_polygon;

select AVG(SRID(g)) FROM gis_polygon;

select AVG(SRID(g)) FROM gis_multi_polygon;

select AVG(Dimension(g)) FROM gis_polygon;

select AVG(Dimension(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select AVG(AsText(Envelope(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select AVG(AsText(Envelope(g))) FROM gis_multi_polygon;

select AVG(IsSimple(g)) FROM gis_polygon;

select AVG(IsSimple(g)) FROM gis_multi_polygon;

select AVG(IsEmpty(g)) FROM gis_polygon;

select AVG(IsEmpty(g)) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select AVG(Area(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select AVG(Area(g)) FROM gis_multi_polygon;

select AVG(AsText(ExteriorRing(g))) FROM gis_polygon;

select AVG(AsText(InteriorRingN(g, 1))) FROM gis_polygon;

select AVG(NumInteriorRings(g)) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select AVG(AsText(Centroid(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select AVG(AsText(Centroid(g))) FROM gis_multi_polygon;


--echo #Checking the COUNT(DISTINCT) function
select COUNT(DISTINCT(GeometryType(g))) FROM gis_polygon;

select COUNT(DISTINCT(GeometryType(g))) FROM gis_multi_polygon;

select COUNT(DISTINCT(SRID(g))) FROM gis_polygon;

select COUNT(DISTINCT(SRID(g))) FROM gis_multi_polygon;

select COUNT(DISTINCT(Dimension(g))) FROM gis_polygon;

select COUNT(DISTINCT(Dimension(g))) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select COUNT(DISTINCT(AsText(Envelope(g)))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select COUNT(DISTINCT(AsText(Envelope(g)))) FROM gis_multi_polygon;

select COUNT(DISTINCT(IsSimple(g))) FROM gis_polygon;

select COUNT(DISTINCT(IsSimple(g))) FROM gis_multi_polygon;

select COUNT(DISTINCT(IsEmpty(g))) FROM gis_polygon;

select COUNT(DISTINCT(IsEmpty(g))) FROM gis_multi_polygon;

--error ER_GIS_INVALID_DATA
select COUNT(DISTINCT(Area(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select COUNT(DISTINCT(Area(g))) FROM gis_multi_polygon;

select COUNT(DISTINCT(AsText(ExteriorRing(g)))) FROM gis_polygon;

select COUNT(DISTINCT(AsText(InteriorRingN(g, 1)))) FROM gis_polygon;

select COUNT(DISTINCT(NumInteriorRings(g))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select COUNT(DISTINCT(AsText(Centroid(g)))) FROM gis_polygon;

--error ER_GIS_INVALID_DATA
select COUNT(DISTINCT(AsText(Centroid(g)))) FROM gis_multi_polygon;


--echo #Final Cleanup
--disable_warnings
DROP TABLE IF EXISTS gis_polygon, gis_multi_polygon;
--enable_warnings
