set optimizer_trace_max_mem_size=1048576;
set end_markers_in_json=on;
set optimizer_trace="enabled=on";
SET @old_sql_mode = @@sql_mode;
SET @@sql_mode='ONLY_FULL_GROUP_BY';
#
# Bug#16021396 ONLY_FULL_GROUP_BY REJECTS VALID QUERY USING VIEW
#
create table t1(a int, b int, c int) engine=InnoDB;
create algorithm=merge view v1 as select t1.a*2 as a, t1.b*2 as b, t1.c*2 as c from t1;
show create view v1;
View	Create View	character_set_client	collation_connection
v1	CREATE ALGORITHM=MERGE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v1` AS select (`t1`.`a` * 2) AS `a`,(`t1`.`b` * 2) AS `b`,(`t1`.`c` * 2) AS `c` from `t1`	latin1	latin1_swedish_ci
select sin(b) as z from t1 group by sin(b);
z
select sin(b) as z from v1 group by sin(b);
z
select sin(b) as z from t1 group by b;
z
select sin(b) as z from v1 group by b;
z
select sin(b) as z from v1 group by z;
z
drop view v1;
create algorithm=temptable view v1 as select t1.a*2 as a, t1.b*2 as b, t1.c*2 as c from t1;
show create view v1;
View	Create View	character_set_client	collation_connection
v1	CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v1` AS select (`t1`.`a` * 2) AS `a`,(`t1`.`b` * 2) AS `b`,(`t1`.`c` * 2) AS `c` from `t1`	latin1	latin1_swedish_ci
select sin(b) as z from t1 group by sin(b);
z
select sin(b) as z from v1 group by sin(b);
z
select sin(b) as z from t1 group by b;
z
select sin(b) as z from v1 group by b;
z
select sin(b) as z from v1 group by z;
z
drop view v1;
drop table t1;
CREATE TABLE group_by_test2 (
id int unsigned primary key,
cat int unsigned not null,
name varchar(10),
num int unsigned
);
INSERT INTO group_by_test2 (id,cat,name,num) VALUES
(1,10,'foo',2),
(2,11,'foo',1),
(3,22,'bar',3),
(4,23,'bar',7),
(5,34,'test',7);
SELECT
cat,
name,
SUM(num)
FROM
group_by_test2
GROUP BY
cat;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.group_by_test2.name' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
ALTER TABLE group_by_test2 ADD UNIQUE INDEX (cat);
SELECT
cat,
name,
SUM(num)
FROM
group_by_test2
GROUP BY
cat;
cat	name	SUM(num)
10	foo	2
11	foo	1
22	bar	3
23	bar	7
34	test	7
SELECT
cat,
name,
SUM(num)
FROM
group_by_test2
GROUP BY
cat WITH ROLLUP;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.group_by_test2.name' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
SELECT
cat,
length(cat),
SUM(num)
FROM
group_by_test2
GROUP BY
cat
WITH ROLLUP;
cat	length(cat)	SUM(num)
10	2	2
11	2	1
22	2	3
23	2	7
34	2	7
NULL	NULL	20
DROP TABLE group_by_test2;
# Test from Bug #18993257 SELECT AGGR + NON-AGGR FROM JOIN WITH VIEW IS NOT REJECTED BY ONLY_FULL_GROUP_BY
CREATE TABLE t1 (
col_int_key INT,
col_varchar_key VARCHAR(1)
);
CREATE TABLE t2 (
pk INTEGER,
col_int_key INTEGER
);
CREATE VIEW view_b AS SELECT * FROM t2;
SELECT MIN( alias2.col_int_key ),
alias2.col_int_key
FROM t1 AS alias1, t2 AS alias2
WHERE alias1.col_int_key IS NULL;
ERROR 42000: In aggregated query without GROUP BY, expression #2 of SELECT list contains nonaggregated column 'test.alias2.col_int_key'; this is incompatible with sql_mode=only_full_group_by
SELECT MIN( alias2.col_int_key ),
alias2.col_int_key
FROM t1 AS alias1, view_b AS alias2
WHERE alias1.col_int_key IS NULL;
ERROR 42000: In aggregated query without GROUP BY, expression #2 of SELECT list contains nonaggregated column 'alias2.col_int_key'; this is incompatible with sql_mode=only_full_group_by
DROP TABLE t1, t2;
DROP VIEW view_b;
#
# WL#2489; Recognizing some functional dependencies
#
create table t1(
a int,
b int not null,
c int not null,
d int,
unique key(b,c),
unique key(b,d)
);
select sin(a) as z from t1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a) as z from t1 group by d,b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a) as z from t1 group by c,b;
z
select sin(a+b*c) as z from t1 group by c,b;
z
# In PS mode, we see nothing below, because only_full_group_by
# checks are done at PREPARE, whereas trace below is from EXECUTE.
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select (select sin(a)) as z from t1 group by d,b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select (select sin(a)) as z from t1 group by c,b;
z
select sin(a) as z from t1 group by c*2,b*2;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a) as z from t1 where b=2 group by c;
z
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select sin(t2.a) as z from t1, t1 as t2
where t2.a=t1.a group by t1.b,t1.c;
z
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select sin(t2.a) as z from t1, t1 as t2
where t2.b=t1.b and t2.c=t1.c group by t1.b,t1.c;
z
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select t3.a from t1, t1 as t2, t1 as t3
where
t3.b=t2.b and t3.c=t1.d and
t2.b=t1.b and t2.c=t1.c
group by t1.b,t1.c;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
create table t3(pk int primary key, b int);
select t3.b from  t1,t1 as t2,t3
where t3.pk=t2.d and t2.b=t1.b and t2.c=t1.a
group by t1.b,t1.c;
b
drop table t3;
select (select t1.b from t1
where t2.b=t1.b
group by t1.a) from t1 as t2;
(select t1.b from t1
where t2.b=t1.b
group by t1.a)
create table t2 like t1;
delete from t1;
insert into t1 (a,b) values(1,10),(2,20);
Warnings:
Warning	1364	Field 'c' doesn't have a default value
insert into t2 (a,b) values(1,-10);
Warnings:
Warning	1364	Field 'c' doesn't have a default value
select t1.a,t2.a from t1 left join t2 on t2.a=t1.a and t2.b=t1.b;
a	a
1	NULL
2	NULL
select t1.a from t1 left join t2 on t2.a=t1.a and t2.b=t1.b group by t2.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t1.a,t2.a from t1 left join t2 on 42=t1.a and t2.b=t1.b;
a	a
1	NULL
2	NULL
select t1.a from t1 left join t2 on 42=t1.a and t2.b=t1.b group by t2.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t1.a from t1 left join t2 on t2.b=t1.a group by t2.b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t1.a from t1 left join t2 on 42=t1.a group by t2.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t1.c from t1 left join t2 on t1.a=t1.c group by t1.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t1.b from t1 left join t2 on t1.c=t1.b and t1.a=t1.c group by t1.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.b' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t1.a,t2.c from t1 left join t2 on t1.a=t2.c
and cos(t2.c+t2.b)>0.5 and sin(t1.a+t2.d)<0.9 group by t1.a;
a	c
1	NULL
2	NULL
select t1.a,t2.d from t1 left join t2 on t1.a=t2.c and t1.d=t2.b
and cos(t2.c+t2.b)>0.5 and sin(t1.a+t2.d)<0.9 group by t1.a,t1.d;
a	d
1	NULL
2	NULL
select t1.a,t2.c from t1 left join t2 on t1.a=t2.c
and cos(t2.c+rand())>0.5 group by t1.a;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t2.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t1.a, ANY_VALUE(t2.c) from t1 left join t2 on t1.a=t2.c
and cos(t2.c+rand())>0.5 group by t1.a;
a	ANY_VALUE(t2.c)
1	NULL
2	NULL
prepare s from 'select t1.a,t2.c from t1 left join t2 on t1.a=t2.c
and cos(t2.c+ ? )>0.5 group by t1.a';
execute s using @dummy;
a	c
1	NULL
2	NULL
select t1.a,t2.c from t1 left join t2 on t1.a=t2.c
and cos(t2.c+t2.b)>0.5 OR sin(t2.d)<0.9 group by t1.a;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t2.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t2.b from t1 left join t1 as t2 on t1.a=t2.b and t1.b group by t1.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t2.b' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t2.b from t1 left join t1 as t2 on t1.a=t2.b and (select t1.b) group by t1.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t2.b' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select ANY_VALUE(t1.b) from t1 left join t2 on t1.c=t1.b and t1.a=t1.c group by t1.a;
ANY_VALUE(t1.b)
10
20
select 3+(5*t1.b) from t1 left join t2 on t1.c=t1.b and t1.a=t1.c group by t1.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.b' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select 3+(5*ANY_VALUE(t1.b)) from t1 left join t2 on t1.c=t1.b and t1.a=t1.c group by t1.a;
3+(5*ANY_VALUE(t1.b))
53
103
delete from t1;
insert into t1 (a,b) values(1,10),(1,20),(2,30),(2,40);
Warnings:
Warning	1364	Field 'c' doesn't have a default value
select a, sum(b) from t1;
ERROR 42000: In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'test.t1.a'; this is incompatible with sql_mode=only_full_group_by
select any_value(a), sum(b) from t1;
any_value(a)	sum(b)
1	100
select any_value(a), sum(b) from (select * from t1 order by a desc) as d;
any_value(a)	sum(b)
2	100
select a,b,sum(c) from t1 group by a;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.b' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select a,any_value(b),sum(c) from t1 group by a;
a	any_value(b)	sum(c)
1	10	0
2	30	0
select a,any_value(b),sum(c)
from (select * from t1 order by a desc, b desc) as d
group by a;
a	any_value(b)	sum(c)
1	20	0
2	40	0
# Merged view
create algorithm=merge view v1 as select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1;
show create view v1;
View	Create View	character_set_client	collation_connection
v1	CREATE ALGORITHM=MERGE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v1` AS select (`t1`.`a` * 2) AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d`,`t1`.`a` AS `e` from `t1`	latin1	latin1_swedish_ci
select sin(a) as z from v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a) as z from v1 group by d,b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a) as z from v1 group by c,b;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
select (select sin(a)) as z from v1 group by d,b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select (select sin(a)) as z from v1 group by c,b;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
select sin(a) as z from t1 group by c*2,b*2;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a+b*c) as z from v1 group by c,b;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select sin(a) as z from v1 where b=2 group by c;
z
select sin(t2.a) as z from v1, v1 as t2
where t2.a=v1.a group by v1.b,v1.c;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select sin(t2.a) as z from v1, v1 as t2
where t2.b=v1.b and t2.c=v1.c group by v1.b,v1.c;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
select t3.a from v1, v1 as t2, v1 as t3
where
t3.b=t2.b and t3.c=v1.d and
t2.b=v1.b and t2.c=v1.c
group by v1.b,v1.c;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select a from v1 where a=b group by b;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select b from v1 where a=b group by a;
b
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select v1.c from v1 where v1.c=v1.a group by v1.a;
c
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select v1.a from v1 group by v1.e;
a
2
4
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select v1.c from v1 where v1.c=v1.a group by v1.e;
c
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select t2.d from v1, t1 as t2 where v1.a=t2.d and v1.e=t2.a group by t2.a;
d
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
create algorithm=merge view v1 as select t1.a*2 as a, t1.b as b from t1;
select a from v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop view if exists v1;
# Merged view
create algorithm=merge view v1 as select t1.a*2 as a, t1.b as b from t1 where t1.a=t1.b;
select a from v1 group by b;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
# Aggregates => skipping Merged view
drop view if exists v1;
Warnings:
Note	1051	Unknown table 'test.v1'
# Aggregates => skipping Merged view
drop view if exists v1;
Warnings:
Note	1051	Unknown table 'test.v1'
# Materialized view
create algorithm=temptable view v1 as select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1;
show create view v1;
View	Create View	character_set_client	collation_connection
v1	CREATE ALGORITHM=TEMPTABLE DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `v1` AS select (`t1`.`a` * 2) AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d`,`t1`.`a` AS `e` from `t1`	latin1	latin1_swedish_ci
select sin(a) as z from v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a) as z from v1 group by d,b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a) as z from v1 group by c,b;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
select (select sin(a)) as z from v1 group by d,b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select (select sin(a)) as z from v1 group by c,b;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
select sin(a) as z from t1 group by c*2,b*2;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a+b*c) as z from v1 group by c,b;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select sin(a) as z from v1 where b=2 group by c;
z
select sin(t2.a) as z from v1, v1 as t2
where t2.a=v1.a group by v1.b,v1.c;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select sin(t2.a) as z from v1, v1 as t2
where t2.b=v1.b and t2.c=v1.c group by v1.b,v1.c;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
select t3.a from v1, v1 as t2, v1 as t3
where
t3.b=t2.b and t3.c=v1.d and
t2.b=v1.b and t2.c=v1.c
group by v1.b,v1.c;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select a from v1 where a=b group by b;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select b from v1 where a=b group by a;
b
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select v1.c from v1 where v1.c=v1.a group by v1.a;
c
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select v1.a from v1 group by v1.e;
a
2
4
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select v1.c from v1 where v1.c=v1.a group by v1.e;
c
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select t2.d from v1, t1 as t2 where v1.a=t2.d and v1.e=t2.a group by t2.a;
d
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
create algorithm=temptable view v1 as select t1.a*2 as a, t1.b as b from t1;
select a from v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop view if exists v1;
# Materialized view
create algorithm=temptable view v1 as select t1.a*2 as a, t1.b as b from t1 where t1.a=t1.b;
select a from v1 group by b;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
# Materialized view
create algorithm=temptable view v1 as select sum(t1.a) as a, sum(t1.b) as b from t1;
select a from v1 group by b;
a
6
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
# Materialized view
create algorithm=temptable view v1 as select a, b*5 as b, sum(t1.c) as c, sum(t1.d) as d from t1 group by a,b*5;
select a from v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select c from v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select c from v1 group by b,d;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select a,c from v1 group by a;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select d,c from v1 group by b,a;
d	c
NULL	0
NULL	0
NULL	0
NULL	0
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
# Derived table
select sin(a) as z from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a) as z from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 group by d,b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a) as z from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 group by c,b;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
select (select sin(a)) as z from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 group by d,b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select (select sin(a)) as z from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 group by c,b;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
select sin(a) as z from t1 group by c*2,b*2;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select sin(a+b*c) as z from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 group by c,b;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select sin(a) as z from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 where b=2 group by c;
z
select sin(t2.a) as z from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1, (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as t2
where t2.a=v1.a group by v1.b,v1.c;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select sin(t2.a) as z from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1, (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as t2
where t2.b=v1.b and t2.c=v1.c group by v1.b,v1.c;
z
0.9092974268256817
0.9092974268256817
-0.7568024953079282
-0.7568024953079282
select t3.a from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1, (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as t2, (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as t3
where
t3.b=t2.b and t3.c=v1.d and
t2.b=v1.b and t2.c=v1.c
group by v1.b,v1.c;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select a from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 where a=b group by b;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select b from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 where a=b group by a;
b
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select v1.c from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 where v1.c=v1.a group by v1.a;
c
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select v1.a from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 group by v1.e;
a
2
4
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select v1.c from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1 where v1.c=v1.a group by v1.e;
c
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select t2.d from (select t1.a*2 as a, t1.b as b, t1.c as c, t1.d as d, t1.a as e from t1) as v1, t1 as t2 where v1.a=t2.d and v1.e=t2.a group by t2.a;
d
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
Warnings:
Note	1051	Unknown table 'test.v1'
select a from (select t1.a*2 as a, t1.b as b from t1) as v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop view if exists v1;
Warnings:
Note	1051	Unknown table 'test.v1'
# Derived table
select a from (select t1.a*2 as a, t1.b as b from t1 where t1.a=t1.b) as v1 group by b;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
Warnings:
Note	1051	Unknown table 'test.v1'
# Derived table
select a from (select sum(t1.a) as a, sum(t1.b) as b from t1) as v1 group by b;
a
6
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
Warnings:
Note	1051	Unknown table 'test.v1'
# Derived table
select a from (select a, b*5 as b, sum(t1.c) as c, sum(t1.d) as d from t1 group by a,b*5) as v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select c from (select a, b*5 as b, sum(t1.c) as c, sum(t1.d) as d from t1 group by a,b*5) as v1 group by b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select c from (select a, b*5 as b, sum(t1.c) as c, sum(t1.d) as d from t1 group by a,b*5) as v1 group by b,d;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select a,c from (select a, b*5 as b, sum(t1.c) as c, sum(t1.d) as d from t1 group by a,b*5) as v1 group by a;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select d,c from (select a, b*5 as b, sum(t1.c) as c, sum(t1.d) as d from t1 group by a,b*5) as v1 group by b,a;
d	c
NULL	0
NULL	0
NULL	0
NULL	0
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view if exists v1;
Warnings:
Note	1051	Unknown table 'test.v1'
create algorithm=temptable view v2
as select a as a, 2*a as b from t1;
create algorithm=merge view v1
as select v2.a as a, 3*v2.b as b from v2;
select v1.b from v1 group by v1.a;
b
6
12
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select t2.a from t1 as t2, v1 where t2.a=v1.b group by v1.a;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view v1;
create algorithm=merge view v1
as select v2.a as a, rand()*v2.b as b from v2;
select v1.b from v1 group by v1.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.b' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop view v1;
create algorithm=temptable view v1
as select v2.a as a, rand()*v2.b as b from v2;
select v1.b from v1 group by v1.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.b' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop view v1,v2;
create algorithm=merge view v2 as select 2*a as a, 2*b as b from t1;
create algorithm=merge view v1 as select a, 3*b as b from v2 where a=b;
select 1 from (select a,b+0 from v1 group by a) as d;
1
drop view v1,v2;
select d.s from
(select b, sum(1) as s from t1 where a=b group by a) as d
group by d.b;
s
alter table t1 add column pk int primary key auto_increment;
select d.s from
(select b, c, sum(d) as s from t1 group by pk) as d
group by d.b,d.c;
s
NULL
NULL
NULL
NULL
select d.s from
(select b*3 as c, sum(a) as s from t1 group by b*3) as d
group by d.c;
s
1
1
2
2
drop table t1,t2;
create table customer1(pk int primary key, a int);
create table customer2(pk int primary key, b int);
CREATE algorithm=merge VIEW customer as SELECT pk,a,b
FROM customer1 JOIN customer2 USING (pk);
select customer.pk, customer.b
from customer
group by customer.pk;
pk	b
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop view customer;
CREATE algorithm=temptable VIEW customer as SELECT pk,a,b
FROM customer1 JOIN customer2 USING (pk);
select customer.pk, customer.b
from customer
group by customer.pk;
pk	b
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
insert into customer1 values(0,10),(1,20);
insert into customer2 values(0,10),(1,20);
explain select customer1.a, count(*)
from customer1 left join customer2 on customer1.a=customer2.b
where customer1.pk in (7,9)
group by customer2.b;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.customer1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
explain select customer1.a, count(*)
from customer1 left join customer2 on customer1.a=customer2.b
where customer2.pk in (7,9)
group by customer2.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	customer1	NULL	ALL	NULL	NULL	NULL	NULL	2	100.00	Using temporary; Using filesort
1	SIMPLE	customer2	NULL	range	PRIMARY	PRIMARY	4	NULL	2	50.00	Using where; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `test`.`customer1`.`a` AS `a`,count(0) AS `count(*)` from `test`.`customer1` join `test`.`customer2` where ((`test`.`customer2`.`b` = `test`.`customer1`.`a`) and (`test`.`customer2`.`pk` in (7,9))) group by `test`.`customer2`.`b`
drop table customer1,customer2;
drop view customer;
create table t1(pk int primary key, a int);
create table t2(pk int primary key, b int);
select t1.pk, t1.a from t1 join t2 on t1.pk=t2.pk group by t1.pk;
pk	a
select t1.pk, t1.a from t1 join t2 using(pk) group by t1.pk;
pk	a
select t1.pk, t1.a from t1 natural join t2 group by t1.pk;
pk	a
select t1.pk, t1.a from t1 left join t2 using(pk) group by t1.pk;
pk	a
select t1.pk, t1.a from t1 natural left join t2 group by t1.pk;
pk	a
select t1.pk, t2.b from t1 join t2 on t1.pk=t2.pk group by t1.pk;
pk	b
select t1.pk, t2.b from t1 join t2 using(pk) group by t1.pk;
pk	b
select t1.pk, t2.b from t1 natural join t2 group by t1.pk;
pk	b
select t1.pk, t2.b from t1 left join t2 using(pk) group by t1.pk;
pk	b
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select t1.pk, t2.b from t1 natural left join t2 group by t1.pk;
pk	b
select t1.pk, t2.b from t2 right join t1 using(pk) group by t1.pk;
pk	b
select t1.pk, t2.b from t2 natural right join t1 group by t1.pk;
pk	b
select t1.pk, t2.b from t1 left join t2 on t1.pk>t2.pk group by t1.pk;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t2.b' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
"functional_dependencies_of_GROUP_columns": {
              "all_columns_of_table_map_bits": [
                0
              ] /* all_columns_of_table_map_bits */,
              "columns": [
                "test.t1.pk"
              ] /* columns */
            } 
select t1.pk, t2.b from t2 right join t1 on t1.pk>t2.pk group by t1.pk;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t2.b' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop table t1,t2;
create table t1(a int, b int);
insert into t1 values(null,0),(null,1);
select d.a,d.c
from t1 left join (select a, coalesce(a,3) as c from t1) as d
on t1.b>0;
a	c
NULL	3
NULL	3
NULL	NULL
select d.a,d.c
from t1 left join (select a, coalesce(a,3) as c from t1) as d
on t1.b>0 group by d.a;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'd.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
"functional_dependencies_of_GROUP_columns": {
              "columns": [
                "d.a"
              ] /* columns */,
              "searched_in_materialized_tables": [
                {
                  "table": " `d`",
                  "columns": [
                    "test.t1.a"
                  ] /* columns */
                }
              ] /* searched_in_materialized_tables */
            } 
select d.a,d.c
from t1 left join (select a, count(a) as c from t1 group by a) as d
on t1.b+d.c>0;
a	c
NULL	0
NULL	NULL
select d.a,d.c
from t1 left join (select a, count(a) as c from t1 group by a) as d
on t1.b+d.c>0 group by d.a;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'd.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
"functional_dependencies_of_GROUP_columns": {
              "columns": [
                "d.a"
              ] /* columns */,
              "searched_in_materialized_tables": [
                {
                  "table": " `d`",
                  "columns": [
                    "test.t1.a"
                  ] /* columns */,
                  "all_group_expressions": true
                }
              ] /* searched_in_materialized_tables */
            } 
select d.m,d.c
from t1 left join (select max(a) as m, count(a) as c from t1) as d
on t1.b+d.c>0;
m	c
NULL	0
NULL	NULL
select d.m,d.c
from t1 left join (select max(a) as m, count(a) as c from t1) as d
on t1.b+d.c>0 group by d.m;
ERROR 42000: Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'd.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
"functional_dependencies_of_GROUP_columns": {
              "columns": [
                "d.m"
              ] /* columns */,
              "searched_in_materialized_tables": [
                {
                  "table": " `d`"
                }
              ] /* searched_in_materialized_tables */
            } 
select d.m,d.c
from t1 left join (select max(a) as m, count(a) as c from t1) as d
on t1.b+d.c>0 group by d.c;
m	c
NULL	NULL
NULL	0
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop table t1;
create table t1(pk int primary key, a int);
select t3.a
from t1 left join (t1 as t2 left join t1 as t3 on 1) on 1
group by t3.pk;
a
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
select (select t1.a from t1 as t2 limit 1) from t1 group by pk;
(select t1.a from t1 as t2 limit 1)
select t1.a*3 from t1 group by t1.a;
t1.a*3
SELECT show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;
show_json_object('"functional_dependencies_of_GROUP_columns": {', TRACE)
NOT FOUND
drop table t1;
create table t1(a int, b int);
insert into t1 values();
insert into t1 values(10,11);
create table t2(c int, d int);
insert into t2 values(2,3);
select t4.d
from t1 left join (t2 as t3 join t2 as t4 on t4.d=3) on t1.a=10;
d
3
NULL
select t4.d
from t1 left join (t2 as t3 join t2 as t4 on t4.d=3) on t1.a=10 group by "";
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t4.d' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t4.d
from t1 left join (t2 as t3 left join t2 as t4 on t4.d=3) on t1.a=10;
d
3
NULL
select t4.d
from t1 left join (t2 as t3 left join t2 as t4 on t4.d=3) on t1.a=10 group by "";
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t4.d' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
select t4.d
from t1 join (t2 as t3 left join t2 as t4 on t4.d=3) on t1.a=10;
d
3
select t4.d
from t1 join (t2 as t3 left join t2 as t4 on t4.d=3) on t1.a=10 group by "";
d
3
create view v1 as select a as a, 2*a as b, coalesce(a,3) as c from t1;
select v1.b from t1 left join v1 on 1;
b
NULL
NULL
20
20
select v1.b from t1 left join v1 on 1 group by v1.a;
b
NULL
20
select v1.c from t1 left join v1 on 1;
c
3
3
10
10
select v1.c from t1 left join v1 on 1 group by v1.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'v1.c' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop view v1;
create view v1 as select a as a, 2 as b from t1;
select t1.a, v1.b from t1 left join v1 on t1.a is not null;
a	b
10	2
10	2
NULL	2
select t1.a, v1.b from t1 left join v1 on t1.a is not null group by v1.a;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.t1.a' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop view v1;
drop table t1,t2;
create table emp(empno int, ename char(1), deptno int);
create table dept(deptno int primary key, dname char(1));
CREATE algorithm=merge VIEW empdept AS
SELECT emp.empno, emp.ename, dept.deptno, dept.dname
FROM emp LEFT OUTER JOIN dept ON (emp.deptno = dept.deptno);
EXPLAIN SELECT dname, COUNT(*)
FROM empdept
GROUP BY deptno;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	emp	NULL	ALL	NULL	NULL	NULL	NULL	1	100.00	Using temporary; Using filesort
1	SIMPLE	dept	NULL	eq_ref	PRIMARY	PRIMARY	4	test.emp.deptno	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`dept`.`dname` AS `dname`,count(0) AS `COUNT(*)` from `test`.`emp` left join `test`.`dept` on((`test`.`emp`.`deptno` = `test`.`dept`.`deptno`)) where 1 group by `test`.`dept`.`deptno`
SELECT dname, COUNT(*)
FROM empdept
GROUP BY deptno;
dname	COUNT(*)
drop view empdept;
CREATE algorithm=temptable VIEW empdept AS
SELECT emp.empno, emp.ename, dept.deptno, dept.dname
FROM emp LEFT OUTER JOIN dept ON (emp.deptno = dept.deptno);
EXPLAIN SELECT dname, COUNT(*)
FROM empdept
GROUP BY deptno;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	PRIMARY	<derived2>	NULL	ALL	NULL	NULL	NULL	NULL	2	100.00	Using temporary; Using filesort
2	DERIVED	emp	NULL	ALL	NULL	NULL	NULL	NULL	1	100.00	NULL
2	DERIVED	dept	NULL	eq_ref	PRIMARY	PRIMARY	4	test.emp.deptno	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `empdept`.`dname` AS `dname`,count(0) AS `COUNT(*)` from `test`.`empdept` group by `empdept`.`deptno`
SELECT dname, COUNT(*)
FROM empdept
GROUP BY deptno;
dname	COUNT(*)
select emp.ename
from
(select 1 as empno union select 2) deriv,
emp
where emp.empno=deriv.empno
group by emp.empno;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'test.emp.ename' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop view empdept;
CREATE VIEW empdept AS
SELECT emp.empno, emp.ename, dept.deptno, concat("",dept.dname) as dname
FROM emp LEFT JOIN dept ON (emp.deptno = dept.deptno);
SELECT ename, COUNT(*) FROM empdept WHERE empno=dname and empno=deptno GROUP BY empno;
ERROR 42000: Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'empdept.ename' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
drop table emp,dept;
drop view empdept;
DROP FUNCTION show_json_object;
