# GIS implementation is specific to myisam.
# Hence retaining the below inc file.
--source include/force_myisam_default.inc
--source include/have_myisam.inc

-- source include/have_geometry.inc


#
# Spatial objects
#

--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

select 1, ST_Intersects(GeomFromText('POLYGON((0 0,20 0,20 20,0 20,0 0))'), GeomFromText('POLYGON((10 10,30 10,30 30,10 30,10 10))'));
select 0, ST_Intersects(GeomFromText('POLYGON((0 0,20 10,10 30, 0 0))'), GeomFromText('POLYGON((10 40, 40 50, 20 70, 10 40))'));
select 1, ST_Intersects(GeomFromText('POLYGON((0 0,20 10,10 30, 0 0))'), GeomFromText('POINT(10 10)'));
select 1, ST_Intersects(GeomFromText('POLYGON((0 0,20 10,10 30, 0 0))'), GeomFromText('POLYGON((10 10,30 20,20 40, 10 10))'));
select 0, ST_Within(GeomFromText('POLYGON((0 0,20 10,10 30, 0 0))'), GeomFromText('POLYGON((10 10,30 20,20 40, 10 10))'));
select 1, ST_Within(GeomFromText('POLYGON((1 1,20 10,10 30, 1 1))'), GeomFromText('POLYGON((0 0,30 5,10 40, 0 0))'));


create table t1 (g point);
insert into t1 values 
(GeomFromText('POINT(2 2)')), (GeomFromText('POINT(2 4)')), (GeomFromText('POINT(2 6)')), (GeomFromText('POINT(2 8)')),
(GeomFromText('POINT(4 2)')), (GeomFromText('POINT(4 4)')), (GeomFromText('POINT(4 6)')), (GeomFromText('POINT(4 8)')),
(GeomFromText('POINT(6 2)')), (GeomFromText('POINT(6 4)')), (GeomFromText('POINT(6 6)')), (GeomFromText('POINT(6 8)')),
(GeomFromText('POINT(8 2)')), (GeomFromText('POINT(8 4)')), (GeomFromText('POINT(8 6)')), (GeomFromText('POINT(8 8)'));

select astext(g) from t1 where ST_Within(g, GeomFromText('POLYGON((5 1, 7 1, 7 7, 5 7, 3 3, 5 3, 5 1))'));
select 'Contains';
select astext(g) from t1 where ST_Contains(GeomFromText('POLYGON((5 1, 7 1, 7 7, 5 7, 3 3, 5 3, 5 1))'), g);
select 'Intersects';
select astext(g) from t1 where ST_Intersects(GeomFromText('POLYGON((5 1, 7 1, 7 7, 5 7, 3 3, 5 3, 5 1))'), g);
select 'Contains';
select astext(g) from t1 where ST_Contains(GeomFromText('POLYGON((5 1, 7 1, 7 7, 5 7, 3 3, 5 3, 5 1))'), g);
select 'Contains2';
select astext(g) from t1 where ST_Contains(GeomFromText('POLYGON((5 1, 7 1, 7 7, 5 7, 3 3, 5 3, 5 1), (5.01 3.01, 6 5, 9 5, 8 3, 5.01 3.01))'), g);

DROP TABLE t1;

select 0, ST_Within(GeomFromText('LINESTRING(15 15, 50 50, 60 60)'), GeomFromText('POLYGON((10 10,30 20,20 40, 10 10))'));
select 1, ST_Within(GeomFromText('LINESTRING(15 15, 16 16)'), GeomFromText('POLYGON((10 10,30 20,20 40, 10 10))'));


select 1, ST_Intersects(GeomFromText('LINESTRING(15 15, 50 50)'), GeomFromText('LINESTRING(50 15, 15 50)'));
select 1, ST_Intersects(GeomFromText('LINESTRING(15 15, 50 50)'), GeomFromText('LINESTRING(16 16, 51 51)'));

select 1, ST_Intersects(GeomFromText('POLYGON((0 0, 50 45, 40 50, 0 0))'), GeomFromText('POLYGON((50 5, 55 10, 0 45, 50 5))'));

select astext(ST_Union(geometryfromtext('point(1 1)'), geometryfromtext('polygon((0 0, 2 0, 1 2, 0 0))')));
select astext(ST_Intersection(geometryfromtext('point(1 1)'), geometryfromtext('polygon((0 0, 2 0, 1 2, 0 0))')));

select ST_Intersects(GeomFromText('POLYGON((0 0, 50 45, 40 50, 0 0))'), GeomFromText('POLYGON((50 5, 55 10, 0 45, 50 5))'));
select ST_contains(GeomFromText('MULTIPOLYGON(((0 0, 0 5, 5 5, 5 0, 0 0)), ((6 6, 6 11, 11 11, 11 6, 6 6)))'), GeomFromText('POINT(5 10)'));
select ST_Disjoint(GeomFromText('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'), GeomFromText('POLYGON((10 10, 10 15, 15 15, 15 10, 10 10))'));
select ST_Disjoint(GeomFromText('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'), GeomFromText('POLYGON((10 10, 10 4, 4 4, 4 10, 10 10))'));
select ST_Overlaps(GeomFromText('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'), GeomFromText('POLYGON((10 10, 10 4, 4 4, 4 10, 10 10))'));
select ST_Overlaps(GeomFromText('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'), GeomFromText('POLYGON((1 1, 1 4, 4 4, 4 1, 1 1))'));

# Distance tests
select ST_DISTANCE(geomfromtext('polygon((0 0, 1 2, 2 1, 0 0))'), geomfromtext('polygon((2 2, 3 4, 4 3, 2 2))'));
select ST_DISTANCE(geomfromtext('polygon((0 0, 1 2, 2 1, 0 0))'), geomfromtext('linestring(0 1, 1 0)'));
select ST_DISTANCE(geomfromtext('polygon((0 0, 3 6, 6 3, 0 0))'), geomfromtext('polygon((2 2, 3 4, 4 3, 2 2))'));
select ST_DISTANCE(geomfromtext('polygon((0 0, 3 6, 6 3, 0 0),(2 2, 3 4, 4 3, 2 2))'), geomfromtext('point(3 3)'));
select ST_DISTANCE(geomfromtext('linestring(0 0, 3 6, 6 3, 0 0)'), geomfromtext('polygon((2 2, 3 4, 4 3, 2 2))'));


# Operations tests
--replace_result 23.85542168674699 23.855421686746986
select astext(ST_Intersection(GeomFromText('POLYGON((0 0, 50 45, 40 50, 0 0))'), GeomFromText('POLYGON((50 5, 55 10, 0 45, 50 5))')));
--replace_result 23.85542168674699 23.855421686746986
select astext(ST_Intersection(GeomFromText('LINESTRING(0 0, 50 45, 40 50, 0 0)'), GeomFromText('LINESTRING(50 5, 55 10, 0 45, 50 5)')));
select astext(ST_Intersection(GeomFromText('LINESTRING(0 0, 50 45, 40 50)'), GeomFromText('LINESTRING(50 5, 55 10, 0 45)')));
select astext(ST_Intersection(GeomFromText('POLYGON((0 0, 50 45, 40 50, 0 0))'), GeomFromText('POINT(20 20)')));
select astext(ST_Intersection(GeomFromText('POLYGON((0 0, 50 45, 40 50, 0 0))'), GeomFromText('LINESTRING(-10 -10, 200 200)')));
select astext(ST_Intersection(GeomFromText('POLYGON((0 0, 50 45, 40 50, 0 0))'), GeomFromText('LINESTRING(-10 -10, 200 200, 199 201, -11 -9)')));
select astext(ST_UNION(GeomFromText('POLYGON((0 0, 50 45, 40 50, 0 0))'), GeomFromText('LINESTRING(-10 -10, 200 200, 199 201, -11 -9)')));

select astext(ST_intersection(geomfromtext('polygon((0 0, 1 0, 0 1, 0 0))'), geomfromtext('polygon((0 0, 1 1, 0 2, 0 0))')));

select astext(ST_symdifference(geomfromtext('polygon((0 0, 1 0, 0 1, 0 0))'), geomfromtext('polygon((0 0, 1 1, 0 2, 0 0))')));
select astext(ST_UNION(GeomFromText('POLYGON((0 0, 50 45, 40 50, 0 0))'), GeomFromText('LINESTRING(-10 -10, 200 200, 199 201, -11 -9)')));

# Buffer() tests
select astext(ST_buffer(geometryfromtext('point(1 1)'), 1));
create table t1(geom geometrycollection);
insert into t1 values (geomfromtext('POLYGON((0 0, 10 10, 0 8, 0 0))'));
insert into t1 values (geomfromtext('POLYGON((1 1, 10 10, 0 8, 1 1))'));
--replace_result 101.67150840374887 101.67150840374886 108.55539589266462 108.55539589266459
select astext(geom), area(geom),area(ST_buffer(geom,2)) from t1;
select NUMPOINTS(EXTERIORRING(ST_buffer(geom,2))) from t1;

set @geom=geomfromtext('LINESTRING(2 1, 4 2, 2 3, 2 5)');
set @buff=ST_buffer(@geom,1);
select NUMPOINTS(EXTERIORRING(@buff)) from t1;

# cleanup
DROP TABLE t1;

#Touches tests
select st_touches(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'));
select st_touches(geomfromtext('point(1 1)'), geomfromtext('point(1 1)'));
select st_touches(geomfromtext('polygon((0 0, 2 2, 0 4, 0 0))'), geomfromtext('point(1 1)'));
select st_touches(geomfromtext('polygon((0 0, 2 2, 0 4, 0 0))'), geomfromtext('point(1 0)'));
select st_touches(geomfromtext('polygon((0 0, 2 2, 0 4, 0 0))'), geomfromtext('point(1 2)'));
select st_touches(geomfromtext('polygon((0 0, 2 2, 0 4, 0 0))'), geomfromtext('polygon((1 1.2, 1 0, 2 0, 1 1.2))'));
select st_touches(geomfromtext('polygon((0 0, 2 2, 0 4, 0 0))'), geomfromtext('polygon((1 1, 1 0, 2 0, 1 1))'));

#Equals test
SELECT ST_Equals(PolyFromText('POLYGON((67 13, 67 18, 67 18, 59 18, 59 13, 67 13) )'),PolyFromText('POLYGON((67 13, 67 18, 59 19, 59 13, 59 13, 67 13) )')) as result;
SELECT ST_Equals(PolyFromText('POLYGON((67 13, 67 18, 67 18, 59 18, 59 13, 67 13) )'),PolyFromText('POLYGON((67 13, 67 18, 59 18, 59 13, 59 13, 67 13) )')) as result;
SELECT ST_Equals(PointFromText('POINT (12 13)'),PointFromText('POINT (12 13)')) as result;


--echo #
--echo # BUG#11755628/47429: INTERSECTION FUNCTION CRASHED MYSQLD 
--echo # BUG#11759650/51979: UNION/INTERSECTION OF POLYGONS CRASHES MYSQL 
--echo #

SELECT ASTEXT(ST_UNION(GEOMFROMTEXT('POLYGON((525000 183300,525400
183300,525400 18370, 525000 183700,525000 183300))'),
geomfromtext('POLYGON((525298.67 183511.53,525296.57
183510.39,525296.42 183510.31,525289.11 183506.62,525283.17
183503.47,525280.98 183502.26,525278.63 183500.97,525278.39
183500.84,525276.79 183500,525260.7 183491.55,525263.95
183484.75,525265.58 183481.95,525278.97 183488.73,525276.5
183493.45,525275.5 183495.7,525280.35 183498.2,525282.3
183499.1,525282.2 183499.3,525283.55 183500,525301.75
183509.35,525304.45 183504.25,525307.85 183504.95,525304.5
183510.83,525302.81 183513.8,525298.67 183511.53),(525275.06
183489.89,525272.06 183488.37,525268.94 183494.51,525271.94
183496.03,525275.06 183489.89),(525263.26 183491.55,525266.15
183493.04,525269.88 183485.82,525266.99 183484.33,525263.26
183491.55))'))) st_u;

SET @a=0x0000000001030000000200000005000000000000000000000000000000000000000000000000002440000000000000000000000000000024400000000000002440000000000000000000000000000024400000000000000000000000000000000000000000000000000000F03F000000000000F03F0000000000000040000000000000F03F00000000000000400000000000000040000000000000F03F0000000000000040000000000000F03F000000000000F03F;
--error ER_GIS_INVALID_DATA
SELECT ASTEXT(TOUCHES(@a, GEOMFROMTEXT('point(0 0)'))) t;


--echo #
--echo # Bug 18408988 - WL7220 : OVERLAPPING MEMCPY CRASH IN BG_GEOMETRY_COLLECTION::CUT
--echo # Bug 18408919 - WL7220 : OVERLAPPING MEMCPY CRASH IN GEOMETRY::AS_WKB
--echo # Bug 18408875 - WL7220 : ASSERTION FAILED: *P == 0 || *P == 1
--echo #
--error ER_GIS_INVALID_DATA
select st_union((cast(linestring(point(6,-68), point(-22,-4)) as binary(13))),
                st_intersection(point(6,8),multipoint(point(3,1),point(-4,-6),point(1,6),point(-3,-5),point(5,4))));
SET sql_mode = 'NO_ENGINE_SUBSTITUTION';
--error ER_GIS_INVALID_DATA
select st_difference((convert(st_polygonfromwkb(linestring(point(1,1))) using gb18030)),
                     st_geomcollfromwkb(point(1,1)));
SET sql_mode = default;
select mpointfromwkb(st_intersection(linestring(point(-59,82),point(32,29)), point(2,-5)));

SELECT AsText(ST_Symdifference(GeomFromText('POLYGON((5 0,15 25,25 0,15 5,5 0))'),GeomFromText('POLYGON((5 0,15 25,25 0,15 5,5 0))')));
SELECT st_equals(GeomFromWKB(AsWKB(Polygon(Linestring(Point(0, 0),Point(1, 0),Point(1, 1),Point(0, 1))))),
                                  GeomFromText('POLYGON((0 0, 1 0, 1 1, 0 1))'));
# polygon((0 0, 1 0, 1 1, 0 1))
SET @plgnwkb=0x0103000000010000000400000000000000000000000000000000000000000000000000F03F0000000000000000000000000000F03F000000000000F03F0000000000000000000000000000F03F;

SELECT ST_equals(GeomFromWKB(@plgnwkb), GeomFromText('polygon((0 0, 1 0, 1 1, 0 1))'));

--echo #
--echo # Bug 18423730 - WL7220: ASSERTION FAILED: LIST ITERATOR NOT INCREMENTABLE
--echo # Enable using empty geometry collection as intermediate and final result in GIS computation.
select astext(st_union(
             st_intersection(
                               multipoint(point(-1,-1)),
                               point(1,-1)
                                  ),
              st_difference(
                              multipoint(point(-1,1)),
                              point(-1,-1)
                                 )));
# More spatial set operations involving empty geometry collections.
# Empty collection and empty collection
select astext(st_union(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                       st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));
select astext(st_intersection(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                              st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));
select astext(st_difference(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                            st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));
select astext(st_symdifference(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                               st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));


# Empty collection and non-empty collection
select astext(st_intersection(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                              st_difference(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));
select astext(st_difference(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                            st_difference(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));
select astext(st_symdifference(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                               st_difference(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));


# Non-empty collection and empty collection
select astext(st_union(geomfromtext('multipoint(2 2, 3 3)'), st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));
select astext(st_intersection(geomfromtext('multipoint(2 2, 3 3)'), st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));
select astext(st_symdifference(geomfromtext('multipoint(2 2, 3 3)'), st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));
select astext(st_difference(geomfromtext('multipoint(2 2, 3 3)'), st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)'))));

# Empty intermediate or final result
select astext(st_difference(geomfromtext('multipoint(2 2, 3 3)'), geomfromtext('multipoint(0 0, 4 4)')));
select astext(st_difference(geomfromtext('multipoint(2 2, 3 3)'), geomfromtext('multipoint(2 2, 3 3)')));
select astext(st_symdifference(geomfromtext('multipoint(2 2, 3 3)'), geomfromtext('multipoint(0 0, 4 4)')));
select astext(st_symdifference(geomfromtext('multipoint(2 2, 3 3)'), geomfromtext('multipoint(2 2, 3 3)')));

# Spatial relation check operations involving empty geometry collections.
# Empty collection and empty collection
select st_intersects(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                     st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_disjoint(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                   st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_equals(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                 st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_contains(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                   st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_within(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                 st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_touches(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                  st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_overlaps(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                   st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_crosses(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                  st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));


# Empty collection and non-empty collection
select st_intersects(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                     st_union(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_disjoint(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                   st_union(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_equals(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                 st_union(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_contains(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                   st_union(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_within(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                 st_union(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_touches(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                  st_union(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_overlaps(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                   st_union(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_crosses(st_intersection(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                  st_union(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));


# Non-empty collection and empty collection
select st_intersects(st_union(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                     st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_disjoint(st_union(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                   st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_equals(st_union(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                 st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_contains(st_union(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                   st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_within(st_union(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                 st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_touches(st_union(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                  st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_overlaps(st_union(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                   st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));
select st_crosses(st_union(geomfromtext('point(1 1)'), geomfromtext('multipoint(2 2, 3 3)')), 
                  st_intersection(geomfromtext('point(0 0)'), geomfromtext('point(1 1)')));

--echo #
--echo # Bug 18701114 - WL7220: ASSERTION FAILED: (PTR != 0 && NBYTES > 0) || (PTR == 0 && NBYTES == 0),
--echo #
--error ER_GIS_INVALID_DATA
select
st_within(
           multipoint(point(4,2),point(-6,-8)),
           polygon(
                      linestring(point(13,0),point(13,0)),
                      linestring(point(2,4), point(2,4))
                         ));

--echo #
--echo # Bug 18851092 - GEOMFROMTEXT DOES NOT UNDERSTAND NESTED GEOMETRYCOLLECTIONS
--echo #
# Checking parsing WKT of empty geometry collection and nested geometry collections.
SELECT AsText(GeomFromText('GeometryCollection()'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection())'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(,)'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(())'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(point(0 0),)'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(,point(0 0))'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(())'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection((point(0 0)))'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection())'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'));

# Spatial set operations on nested geometry collections, which are flattened and
# their basic components sent to BG algorithms.
SELECT AsText(st_union(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'),
                       GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))')));
SELECT AsText(st_difference(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'),
                            GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))')));
# In below two test cases (st_intersection and st_symdifference) the point disjoint linestring isn't supported 
# now so the result is not correct. This should get right when WL7224 and WL7225 are completed.
SELECT AsText(st_intersection(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'),
                              GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))')));
SELECT AsText(st_symdifference(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'),
                               GeomFromText('GeometryCollection(GeometryCollection(Point(1 1), Point(2 2)))')));



--echo #
--echo # Bug 18701114 - WL7220: ASSERTION FAILED: (PTR != 0 && NBYTES > 0) || (PTR == 0 && NBYTES == 0),
--echo #
--error ER_GIS_INVALID_DATA
select
st_within(
           multipoint(point(4,2),point(-6,-8)),
           polygon(
                      linestring(point(13,0),point(13,0)),
                      linestring(point(2,4), point(2,4))
                         ));

--echo #
--echo # Bug 18851092 - GEOMFROMTEXT DOES NOT UNDERSTAND NESTED GEOMETRYCOLLECTIONS
--echo #
# Checking parsing WKT of empty geometry collection and nested geometry collections.
SELECT AsText(GeomFromText('GeometryCollection()'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection())'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(,)'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(())'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(point(0 0),)'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(,point(0 0))'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection(())'));
--error ER_GIS_INVALID_DATA
SELECT AsText(GeomFromText('GeometryCollection((point(0 0)))'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection())'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))'));
SELECT AsText(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'));

# Spatial set operations on nested geometry collections, which are flattened and
# their basic components sent to BG algorithms.
SELECT AsText(st_union(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'),
                       GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))')));
SELECT AsText(st_difference(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'),
                            GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))')));
# In below two test cases (st_intersection and st_symdifference) the point disjoint linestring isn't supported 
# now so the result is not correct. This should get right when WL7224 and WL7225 are completed.
SELECT AsText(st_intersection(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'),
                              GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)))')));
SELECT AsText(st_symdifference(GeomFromText('GeometryCollection(GeometryCollection(Point(1 1)), GeometryCollection(linestring(1 1, 2 2)))'),
                               GeomFromText('GeometryCollection(GeometryCollection(Point(1 1), Point(2 2)))')));

select astext(st_difference(geomfromtext('polygon((0 0, 1 0, 0 1, 0 0))'), geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))'))) as result;

select astext(st_symdifference(geomfromtext('polygon((0 0, 1 0, 0 1, 0 0))'), geomfromtext('polygon((0 0, 0 1, 1 1, 1 0, 0 0))'))) as result;

--error ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION
select astext(ST_symdifference(geomfromtext('polygon((0 0, 1 0, 0 1, 0 0))'), geomfromtext('polygon((0 0, 1 0, 0 0,0 1, 0 0))'))) as result;

SELECT ST_Equals(geomfromtext('polygon((0 0, 1 0, 0 1, 0 0))'), geomfromtext('polygon((0 0, 1 0, 0 0,0 1, 0 0))')) as result;



select astext(PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(1, 0))))));
--error ER_GIS_INVALID_DATA
select area(PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(1, 0))))));
 select AsText(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'));
 select area(PolygonFromText('POLYGON((10 10,20 10,20 20,10 20))'));

 select AsText(Polygon(LineString(Point(0, 0), Point(1, 0), Point(1,1), Point(0, 1))));

 select AsText(GeometryFromWKB(AsWKB(GeometryCollection(POINT(0, 0),
                                                        MULTIPOINT(point(0, 0), point(1, 1)), LINESTRING(point(0, 0),point(10, 10)),
                                                        MULTILINESTRING(LINESTRING(point(1, 2), point(1, 3))),
                                                        POLYGON(LineString(Point(10, 20), Point(1, 1), Point(2, 2), Point(1, 1),
                                                                           Point(10, 20))), MULTIPOLYGON(Polygon(LineString(Point(0, 0), Point(1, 0),
                                                                                                                            Point(1, 1), Point(0, 0)))))))) as Result;


select AsText(GeometryFromWKB(AsWKB(GeometryCollection(POINT(0, 0),
                                                      MULTIPOINT(point(0, 0), point(1, 1)), LINESTRING(point(0, 0),point(10, 10)),
                                                      MULTILINESTRING(LINESTRING(point(1, 2), point(1, 3))),
                                                      POLYGON(LineString(Point(10, 20), Point(1, 1), Point(2, 2))),
                                                      MULTIPOLYGON(Polygon(LineString(Point(0, 0), Point(1, 0), Point(1, 1),
                                                                                      Point(0, 0)))))))) as Result;


select astext(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(1, 0))));
--error ER_GIS_INVALID_DATA
select area(PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(1, 0))))));
--error ER_GIS_INVALID_DATA
select astext(envelope(PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(1, 0)))))));
--error ER_GIS_INVALID_DATA
select astext(centroid(PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(1, 0)))))));
--error ER_GIS_INVALID_DATA
select astext(convexhull(PolyFromWKB(AsWKB(Polygon(LineString(Point(0, 0), Point(30, 0), Point(30, 30), Point(1, 0)))))));


SELECT AsText(Centroid(GeomFromText('GEOMETRYCOLLECTION(POINT(10 10),MULTIPOINT(0 0,10 10))')));
SELECT AsText(Centroid(GeomFromText('GEOMETRYCOLLECTION(POINT(10 10),MULTIPOINT(0 0,10 10))')));
SELECT AsText(Centroid(GeomFromText('linestring(0 0, 1 1, 2 2)')));
SELECT AsText(Centroid(GeomFromText('multipoint(0 0, 1 1, 2 2)')));
SELECT AsText(Centroid(GeomFromText('multilinestring((0 0, 1 1, 2 2), (3 3, 4 4, 5 5))')));
--error ER_GIS_INVALID_DATA
SELECT AsText(Centroid(GeomFromText('polygon((0 0, 1 1, 2 2), (3 3, 4 4, 5 5))')));
--error ER_GIS_INVALID_DATA
SELECT AsText(Centroid(GeomFromText('multipolygon(((0 0, 1 1, 2 2), (3 3, 4 4, 5 5)), ((0 0, 1 0, 1 1, 0 1, 0 0)))')));
SELECT AsText(Centroid(GeomFromText('geometrycollection(polygon((0 0, 3 0, 3 3, 0 3, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1)), polygon((0 0, 1 0, 1 1, 0 1, 0 0)))')));
SELECT AsText(Centroid(GeomFromText('multipolygon(((0 0, 3 0, 3 3, 0 3, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1)), ((0 0, 1 0, 1 1, 0 1, 0 0)))')));
SELECT AsText(Centroid(GeomFromText('multipolygon(((0 0, 3 0, 3 3, 0 3, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1)))')));
SELECT AsText(Centroid(GeomFromText('polygon((0 0, 1 0, 1 1, 0 1, 0 0))')));
SELECT AsText(Centroid(GeomFromText('multipoint(0 0, 3 0, 3 3, 0 3, 0 0, 1 1, 2 1, 2 2, 1 2, 1 1)')));


SELECT AsText(Convexhull(GeomFromText('GEOMETRYCOLLECTION(POINT(10 10),MULTIPOINT(0 0,10 10))')));
SELECT AsText(Convexhull(GeomFromText('linestring(0 0, 1 1, 2 2)')));
SELECT AsText(Convexhull(GeomFromText('multipoint(0 0, 1 1, 2 2)')));
SELECT AsText(Convexhull(GeomFromText('multilinestring((0 0, 1 1, 2 2), (3 3, 4 4, 5 5))')));
--error ER_GIS_INVALID_DATA
SELECT AsText(Convexhull(GeomFromText('polygon((0 0, 1 1, 2 2), (3 3, 4 4, 5 5))')));
--error ER_GIS_INVALID_DATA
SELECT AsText(Convexhull(GeomFromText('multipolygon(((0 0, 1 1, 2 2), (3 3, 4 4, 5 5)), ((0 0, 1 0, 1 1, 0 1, 0 0)))')));
SELECT AsText(Convexhull(GeomFromText('geometrycollection(polygon((0 0, 3 0, 3 3, 0 3, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1)), polygon((0 0, 1 0, 1 1, 0 1, 0 0)))')));
SELECT AsText(Convexhull(GeomFromText('multipolygon(((0 0, 3 0, 3 3, 0 3, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1)), ((0 0, 1 0, 1 1, 0 1, 0 0)))')));
SELECT AsText(Convexhull(GeomFromText('multipolygon(((0 0, 3 0, 3 3, 0 3, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1)))')));
SELECT AsText(Convexhull(GeomFromText('polygon((0 0, 1 0, 1 1, 0 1, 0 0))')));
SELECT AsText(Convexhull(GeomFromText('multipoint(0 0, 3 0, 3 3, 0 3, 0 0, 1 1, 2 1, 2 2, 1 2, 1 1)')));

--echo #
--echo # Bug #18911154     CENTROID() RETURNING ERROR MESSAGE FOR VALID GEOMETRY-COLLECTION GEOMETRY
--echo #
SELECT AsText(Centroid(GeomFromText('GEOMETRYCOLLECTION(MULTIPOINT(0 0,10 10))')));
SELECT AsText(Centroid(GeomFromText('GEOMETRYCOLLECTION(POLYGON((0 0,0 10,10 10,10 0,0 0)))')));


#Bug #18935403     SPATIAL ANALYSIS FUNCTIONS NOT RETURNING CONSISTENT RESULTS
SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText('GEOMETRYCOLLECTION()')));
SELECT ST_AsText(ST_Envelope(ST_GeomFromText('GEOMETRYCOLLECTION()')));
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION()')));
SELECT ST_Distance(ST_GeomFromText('GEOMETRYCOLLECTION()'),ST_GeomFromText('GEOMETRYCOLLECTION()'));
SELECT ST_Distance(ST_GeomFromText('GEOMETRYCOLLECTION()'),ST_GeomFromText('POINT(10 10)'));
SELECT ST_Distance(ST_GeomFromText('POINT(10 10)'),ST_GeomFromText('GEOMETRYCOLLECTION()'));

# Bug #17541849   AREA() NOT RETURNING CONSISTENT RESULTS WITH THE SELF INTERSECTING POLYGONS
Select Area(PolygonFromText('POLYGON((0 0, 30 30, 30 0, 0 5, 0 0, 30 5, 30 0, 0 10, 0 0, 30 10, 30 0, 0 0))')) as Result;
Select Area(PolygonFromText('POLYGON((1 1, 10 1, 1 0, 10 0, 1 -1, 10 -1, 7 2, 7 -2, 4 2, 4 -2, 1 1))')) as Result;

Select AsText(Centroid(PolyFromText('POLYGON((1 1, 10 1, 10 20, 1 20, 1 1), (-1 -1, -10 -1, -10 -15, -1 -15, -1 -1))'))) as Result;

# Bug #17606622 ISSUES WITH THE CENTROID() FOR THE POLYGONS AND MULTIPOLYGONS
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 10 1, 10 20, 1 20, 1 1),(-1 -1, -10 -1, -10 -15, -1 -15, -1 -1)))'))) as Result;
--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolyFromText('POLYGON((1 1, 10 1, 10 20, 1 20, 1 1), (5 5))'))) as Result;

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolyFromText('POLYGON((1 1, 10 1, 10 20, 1 20, 1 1), (1 1))'))) as Result;

Select AsText(Centroid(PolyFromText('POLYGON((1 1, 10 1, 10 20, 1 20, 1 1), (5 5, 6 5, 6 6, 5 6, 5 5))'))) as Result;

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolyFromText('POLYGON((1 0, 2 0, 3 0, 4 0, 5 0, 1 0))'))) as Result;

--error ER_GIS_INVALID_DATA
Select AsText(Centroid(PolyFromText('POLYGON((1 0, 2 0, 3 0, 4 0, 5 0, 1 0), (2 0, 3 0, 2 0))'))) as Result;

# Bug #17611279 CENTROID() RETURNING POINT(0 0) FOR VALID MULTIPOLYGONS
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 2 1, 2 3, 1 3, 1 1),(1 1, 2 1, 2 3, 1 3, 1 1)),((1 1, 2 1, 2 3, 1 3, 1 1)))'))) as Result;
Select AsText(Centroid(MultiPolygonFromText('MULTIPOLYGON(((1 1, 2 1, 2 3, 1 3, 1 1),(1 1, 2 1, 2 3, 1 3, 1 1)),((20 20, 30 20, 30 40, 20 40, 20 20)))'))) as Result;


#Bug #17371854   ENVELOPE() FUNCTION RESULT INFLUENCED BY THE 1ST ARGUMENT PASSED
select astext(MPointFromWKB(AsWKB(MultiPoint(Point('0', '0'),Point('-0', '0'), Point('0', '-0'))))) as result;
select Astext(Envelope(MPointFromWKB(AsWKB(MultiPoint(Point('0', '0'),Point('-0', '0'), Point('0', '-0')))))) as result;
select astext(MPointFromWKB(AsWKB(MultiPoint(Point('0', '-0'),Point('-0', '0'), Point('0', '0'))))) as result;
select Astext(Envelope(MPointFromWKB(AsWKB(MultiPoint(Point('0', '-0'),Point('-0', '0'), Point('0', '0')))))) as result;


--echo #
--echo # Bug #18919820  CONVEXHULL() FUNCTION PRODUCES INVALID POLYGON AS THE RESULT
--echo # Bug #18957010  CONVEXHULL() FUNCTION RETURNS WRONG RESULT
--echo #

Select ST_AsText(ST_ConvexHull(ST_GeomFromText('MULTIPOINT(5 0,25 0,15 10,15 25)')));

Select ST_AsText(ST_ConvexHull(ST_GeomFromText('POLYGON((5 0,15 25,25 0,15 5,5 0))')));

Select ST_AsText(ST_ConvexHull(ST_GeomFromText('MULTIPOLYGON(((0 0,0 10,10 10,10 0,0 0)),((4 4,4 6,6 6,6 4,4 4)))')));

SELECT ST_AsText(ST_convexhull(ST_GeomFromText('MULTIPOINT(5 -3,0 2,5 7,10 2,10 0,10 -2)')));

SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText('MULTIPOINT(5 0,0 5,5 10,10 5,10 -5)')));

SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText('MULTIPOINT(2 -5,2 5,8 5,8 2,8 0)')));

SELECT st_AsText(st_ConvexHull(st_GeomFromText('GEOMETRYCOLLECTION(POLYGON((0 0,0 10,10 10,10 0,0 0)),POLYGON((0 0,10 0,10 -10,0 -10,0 0)))')));

SELECT st_AsText(st_ConvexHull(st_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,0 10,10 10,10 0,0 0),LINESTRING(0 0,10 0,10 -10,0 -10,0 0))')));

SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText('MULTILINESTRING((4 7,1 0,1 7),(4 9,8 6,9 4))')));

SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText('POLYGON((5 2,5 5,2 8,5 2))')));
SELECT st_AsText(st_Convexhull(st_GeomFromText('multipoint(0 0, 3 0, 3 3, 0 3, 0 0, 1 1, 2 1, 2 2, 1 2, 1 1)')));
SELECT st_AsText(st_Convexhull(st_GeomFromText('multipolygon(((0 0, 3 0, 3 3, 0 3, 0 0), (1 1, 2 1, 2 2, 1 2, 1 1)), ((0 0, 1 0, 1 1, 0 1, 0 0)))')));

--echo #
--echo # Bug #18972363   CENTROID() FUNCTION RETURNS INCORRECT RESULT
--echo #
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,0 10,10 10,10 0),LINESTRING(0 0,10 0,10 -10,0 -10))'))) as centroid;
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('MULTILINESTRING((0 0,0 10,10 10,10 0),(0 0,10 0,10 -10,0 -10))'))) as centroid;

SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,10 0,10 10,0 10),LINESTRING(0 0,10 0,10 -10,0 -10))'))) as centroid;
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('MULTILINESTRING((0 0,10 0,10 10,0 10),(0 0,10 0,10 -10,0 -10))'))) as centroid;

SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON((0 0,0 10,10 10,10 0,0 0)),POLYGON((0 0,10 0,10 -10,0 -10,0 0)))'))) as centroid;
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('MULTIPOLYGON(((0 0,0 10,10 10,10 0,0 0)),((0 0,10 0,10 -10,0 -10,0 0)))'))) as centroid;
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,0 10,10 10,10 0,0 0),LINESTRING(0 0,10 0,10 -10,0 -10,0 0))'))) as centroid;
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('MULTILINESTRING((0 0,0 10,10 10,10 0,0 0),(0 0,10 0,10 -10,0 -10,0 0))'))) as centroid;

SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(multipoint(0 0, 1 1, 2 2), LINESTRING(5 5, 10 10), point(-1 -1),POLYGON((0 0,0 10,10 10,10 0,0 0)),point(3 8), LINESTRING(0 1, 1 0, 2 2), MULTILINESTRING((3 3, 0 3, -3 0), (0 8, 0 0, 8 0)), point( 8 3), POLYGON((0 0,10 0,10 -10,0 -10,0 0)), MULTILINESTRING((4 4, 8 8, 8 4), (0 3, 3 0, 0 -3)), point(9 9), multipoint(10 10, 20 20))'))) as centroid;
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 1, 1 0, 2 2), point(3 8), point( 8 3), MULTILINESTRING((3 3, 0 3, -3 0), (0 8, 0 0, 8 0)), LINESTRING(5 5, 10 10), multipoint(0 0, 1 1, 2 2), point(-1 -1), MULTILINESTRING((4 4, 8 8, 8 4), (0 3, 3 0, 0 -3)), point(9 9), multipoint(10 10, 20 20))'))) as centroid;
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(point(3 8), point( 8 3), multipoint(0 0, 1 1, 2 2), point(-1 -1), point(9 9), multipoint(10 10, 20 20))'))) as centroid;

SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON((0 0,0 10,-10 10,-10 0,0 0)),POLYGON((0 0,0 10,10 10,10 0,0 0)))')));
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON((0 0,0 10,10 10,10 0,0 0)),POLYGON((0 0,0 -10,10 -10,10 0,0 0)))')));
SELECT ST_AsText(ST_Centroid(ST_GeomFromText('GEOMETRYCOLLECTION(POLYGON((0 0,0 10,10 10,10 0,0 0)),POLYGON((0 0,10 0,10 -10,0 -10,0 0)))')));

--echo #
--echo # BUG #18911119 ASSERTION FAILED: !NO_DATA(NBYTES)
--echo #
--error ER_GIS_INVALID_DATA
select (aswkb(cast(st_union(multipoint(
                                       point(8,6), point(1,-17679),
                                       point(-9,-9)),
                            linestring(point(91,12), point(-77,49),
                                       point(53,-81)))as char(18))))
in  ('1','2');


--echo #
--echo # Bug #19204199  DISTANCE() AND ENVELOPE() FUNCTIONS RETURN WRONG RESULT
--echo #
SELECT ST_Distance(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,10 10,20 20),GEOMETRYCOLLECTION())'),ST_GeomFromText('LINESTRING(5 0,10 0)'));
SELECT ST_Distance(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,10 10,20 20),GEOMETRYCOLLECTION())'),ST_GeomFromText('multipoint(5 0,10 0)'));
SELECT ST_Distance(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,10 10,20 20))'),ST_GeomFromText('LINESTRING(5 0,10 0)'));

SELECT ST_Distance(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION())'),ST_GeomFromText('GEOMETRYCOLLECTION()'));
SELECT ST_Distance(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,10 10,20 20),GEOMETRYCOLLECTION(point(2 4), GEOMETRYCOLLECTION(), GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(), GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(), GEOMETRYCOLLECTION()))))'),ST_GeomFromText('GEOMETRYCOLLECTION(multipoint(5 0,10 0), GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(), GEOMETRYCOLLECTION()))'));
SELECT ST_Distance(ST_GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,10 10,20 20),GEOMETRYCOLLECTION())'),ST_GeomFromText('LINESTRING(5 0,10 0)'));

SELECT AsText(ST_Envelope(GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,0 10,10 10),GEOMETRYCOLLECTION())')));
SELECT AsText(ST_Envelope(GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,0 10,10 10),GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(), GEOMETRYCOLLECTION(GEOMETRYCOLLECTION())))')));
SELECT AsText(ST_Envelope(GeomFromText('GEOMETRYCOLLECTION(LINESTRING(0 0,0 10,10 10),GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(), point(4 4), GEOMETRYCOLLECTION(GEOMETRYCOLLECTION())))')));
SELECT AsText(ST_Envelope(GeomFromText('GEOMETRYCOLLECTION()')));
SELECT AsText(ST_Envelope(GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(), GEOMETRYCOLLECTION(GEOMETRYCOLLECTION(), GEOMETRYCOLLECTION(), GEOMETRYCOLLECTION(GEOMETRYCOLLECTION())))')));

SELECT ST_intersects(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION())'),ST_GeomFromText('GEOMETRYCOLLECTION()'));
SELECT ST_disjoint(ST_GeomFromText('GEOMETRYCOLLECTION(GEOMETRYCOLLECTION())'),ST_GeomFromText('GEOMETRYCOLLECTION()'));


--echo #
--echo # Bug #19133043  REPRESENTATION OF THE SAME POINT GEOMETRY ISSUE WITH SPATIAL ANALYSIS FUNCTIONS
--echo #
SELECT ST_AsText(ST_Envelope(ST_GeomFromText('POINT(-0 0)')));

SELECT ST_AsText(ST_Envelope(ST_GeomFromText('POINT(0 -0)')));

SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText('POINT(0 -0)')));

SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText('POINT(-0 0)')));

SELECT ST_AsText(ST_ConvexHull(ST_GeomFromText('POINT(0 -0)'))) =ST_AsText(ST_ConvexHull(ST_GeomFromText('POINT(-0 0)'))) ;

--echo #
--echo # Bug #19142227   ENVELOPE() SPATIAL ANALYSIS FUNCTION ACCEPTS INVALID POLYGONS AS THE ARGUMENT
--echo #
--error ER_GIS_INVALID_DATA
SELECT AsText(Envelope(GeomFromText('POLYGON((0 0))')));
--error ER_GIS_INVALID_DATA
SELECT AsText(Envelope(GeomFromText('POLYGON((0 0,5 5))')));
--error ER_GIS_INVALID_DATA
SELECT AsText(Envelope(GeomFromText('POLYGON((0 0,5 5,10 10))')));
--error ER_GIS_INVALID_DATA
SELECT AsText(Envelope(GeomFromText('MULTIPOLYGON(((0 0,5 5)),((1 1,1 1,1 1,1 1)))')));

--echo #
--echo # Bug #19304320 CENTROID() AND CONVEXHULL() FUNCTIONS RETURN NULL WITH VALID GEOMETRY INPUT
--echo #
Select st_astext(st_centroid(st_geomfromtext('geometrycollection(polygon((0 0,0 10,10 10,10 0,0 0)))')));
Select st_astext(st_centroid(st_geomfromtext('geometrycollection(geometrycollection(),polygon((0 0,0 10,10 10,10 0,0 0)))')));
Select st_astext(st_convexhull(st_geomfromtext('geometrycollection(polygon((0 0,0 10,10 10,10 0,0 0)))')));
Select st_astext(st_convexhull(st_geomfromtext('geometrycollection(geometrycollection(),polygon((0 0,0 10,10 10,10 0,0 0)))')));
select st_distance(st_geomfromtext('geometrycollection(geometrycollection(),polygon((0 0,0 10,10 10,10 0,0 0)))'),st_geomfromtext('linestring(0 0,10 10)'));
select st_distance(st_geomfromtext('geometrycollection(geometrycollection(),polygon((0 0,0 10,10 10,10 0,0 0)))'),st_geomfromtext('point(100 100)'));
Select st_distance(st_geomfromtext('geometrycollection(polygon((0 0,0 10,10 10,10 0,0 0)))'),st_geomfromtext('point(100 100)'));
Select st_distance(st_geomfromtext('geometrycollection(polygon((0 0,0 10,10 10,10 0,0 0)))'),st_geomfromtext('linestring(0 0,10 10)'));

--echo #
--echo # Bug #19351967  CENTROID() AND COVEXHULL() ACCEPTS GEOMETRYCOLLECTION CONTAINING INVALID POLYGON
--echo #
SELECT AsText(ConvexHull(GeomFromText('GeometryCollection(POLYGON((0 0)))')));
--error ER_GIS_INVALID_DATA
SELECT AsText(Centroid(GeomFromText('GeometryCollection(POLYGON((0 0)))')));
--error ER_GIS_INVALID_DATA
SELECT ST_DISTANCE(GeomFromText('POLYGON((0 0, 1 1))'), GeomFromText('POLYGON((1 0, 0 1))'));
--source include/gis_debug.inc
